%hive

USE dbriskdatamart;

DROP TABLE IF EXISTS dbriskdatamart.MZM_MCV_VAR_CR_CL_ACC_2__${FECHA_CALIFICACION};
CREATE TABLE IF NOT EXISTS dbriskdatamart.MZM_MCV_VAR_CR_CL_ACC_2__${FECHA_CALIFICACION}
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'

LOCATION 's3://boi-banregio/datalake/data/InteligenciaRiesgos/M&M/MZM/MCV/MZM_MCV_VAR_CR_CL_ACC_2__${FECHA_CALIFICACION}' AS

SELECT DISTINCT T1.RFC, T1.FOLIO, T1.FECHACONSULTA,
MAX_MS_CL_CL_ACC                  		,
MAX_MS_CL_BK_CL_ACC               		,
MAX_MS_CL_BK_PQ_CL_ACC            		,
MAX_MS_CL_BK_CS_CL_ACC            		,
MAX_MS_CL_BK_LSG_CL_ACC           		,
MAX_MS_CL_BK_R_CL_ACC             		,
MAX_MS_CL_BK_CF_CL_ACC            		,
MAX_MS_CL_BK_OTHER_CL_ACC         		,
MAX_MS_CL_LSE_CL_ACC              		,
MAX_MS_CL_LSE_PQ_CL_ACC           		,
MAX_MS_CL_LSE_CS_CL_ACC           		,
MAX_MS_CL_LSE_LSG_CL_ACC          		,
MAX_MS_CL_LSE_R_CL_ACC            		,
MAX_MS_CL_LSE_CF_CL_ACC           		,
MAX_MS_CL_LSE_OTHER_CL_ACC        		,
MAX_MS_CL_UN_CRE_CL_ACC           		,
MAX_MS_CL_UN_CRE_PQ_CL_ACC        		,
MAX_MS_CL_UN_CRE_CS_CL_ACC        		,
MAX_MS_CL_UN_CRE_LSG_CL_ACC       		,
MAX_MS_CL_UN_CRE_R_CL_ACC         		,
MAX_MS_CL_UN_CRE_CF_CL_ACC        		,
MAX_MS_CL_UN_CRE_OTHER_CL_ACC     		,
MAX_MS_CL_OTHER_FIN_CL_ACC        		,
MAX_MS_CL_OTHER_FIN_PQ_CL_ACC     		,
MAX_MS_CL_OTHER_FIN_CS_CL_ACC     		,
MAX_MS_CL_OTHER_FIN_LSG_CL_ACC    		,
MAX_MS_CL_OTHER_FIN_R_CL_ACC      		,
MAX_MS_CL_OTHER_FIN_CF_CL_ACC     		,
MAX_MS_CL_OTHER_FIN_OTHER_CL_ACC  		,
MAX_MS_CL_GBN_CL_ACC              		,
MAX_MS_CL_GBN_PQ_CL_ACC           		,
MAX_MS_CL_GBN_CS_CL_ACC           		,
MAX_MS_CL_GBN_LSG_CL_ACC          		,
MAX_MS_CL_GBN_R_CL_ACC            		,
MAX_MS_CL_GBN_CF_CL_ACC           		,
MAX_MS_CL_GBN_OTHER_CL_ACC        		,
MAX_MS_CL_BRG_CL_ACC              		,
MAX_MS_CL_BRG_PQ_CL_ACC           		,
MAX_MS_CL_BRG_CS_CL_ACC           		,
MAX_MS_CL_BRG_LSG_CL_ACC          		,
MAX_MS_CL_BRG_R_CL_ACC            		,
MAX_MS_CL_BRG_CF_CL_ACC           		,
MAX_MS_CL_BRG_OTHER_CL_ACC        		,
MAX_MS_CL_BRG_LSE_CL_ACC          		,
MAX_MS_CL_BRG_LSE_PQ_CL_ACC       		,
MAX_MS_CL_BRG_LSE_CS_CL_ACC       		,
MAX_MS_CL_BRG_LSE_LSG_CL_ACC      		,
MAX_MS_CL_BRG_LSE_R_CL_ACC        		,
MAX_MS_CL_BRG_LSE_CF_CL_ACC       		,
MAX_MS_CL_BRG_LSE_OTHER_CL_ACC    		,
AVG_MS_CL_CL_ACC                  		,
AVG_MS_CL_BK_CL_ACC               		,
AVG_MS_CL_BK_PQ_CL_ACC            		,
AVG_MS_CL_BK_CS_CL_ACC            		,
AVG_MS_CL_BK_LSG_CL_ACC           		,
AVG_MS_CL_BK_R_CL_ACC             		,
AVG_MS_CL_BK_CF_CL_ACC            		,
AVG_MS_CL_BK_OTHER_CL_ACC         		,
AVG_MS_CL_LSE_CL_ACC              		,
AVG_MS_CL_LSE_PQ_CL_ACC           		,
AVG_MS_CL_LSE_CS_CL_ACC           		,
AVG_MS_CL_LSE_LSG_CL_ACC          		,
AVG_MS_CL_LSE_R_CL_ACC            		,
AVG_MS_CL_LSE_CF_CL_ACC           		,
AVG_MS_CL_LSE_OTHER_CL_ACC        		,
AVG_MS_CL_UN_CRE_CL_ACC           		,
AVG_MS_CL_UN_CRE_PQ_CL_ACC        		,
AVG_MS_CL_UN_CRE_CS_CL_ACC        		,
AVG_MS_CL_UN_CRE_LSG_CL_ACC       		,
AVG_MS_CL_UN_CRE_R_CL_ACC         		,
AVG_MS_CL_UN_CRE_CF_CL_ACC        		,
AVG_MS_CL_UN_CRE_OTHER_CL_ACC     		,
AVG_MS_CL_OTHER_FIN_CL_ACC        		,
AVG_MS_CL_OTHER_FIN_PQ_CL_ACC     		,
AVG_MS_CL_OTHER_FIN_CS_CL_ACC     		,
AVG_MS_CL_OTHER_FIN_LSG_CL_ACC    		,
AVG_MS_CL_OTHER_FIN_R_CL_ACC      		,
AVG_MS_CL_OTHER_FIN_CF_CL_ACC     		,
AVG_MS_CL_OTHER_FIN_OTHER_CL_ACC  		,
AVG_MS_CL_GBN_CL_ACC              		,
AVG_MS_CL_GBN_PQ_CL_ACC           		,
AVG_MS_CL_GBN_CS_CL_ACC           		,
AVG_MS_CL_GBN_LSG_CL_ACC          		,
AVG_MS_CL_GBN_R_CL_ACC            		,
AVG_MS_CL_GBN_CF_CL_ACC           		,
AVG_MS_CL_GBN_OTHER_CL_ACC        		,
AVG_MS_CL_BRG_CL_ACC              		,
AVG_MS_CL_BRG_PQ_CL_ACC           		,
AVG_MS_CL_BRG_CS_CL_ACC           		,
AVG_MS_CL_BRG_LSG_CL_ACC          		,
AVG_MS_CL_BRG_R_CL_ACC            		,
AVG_MS_CL_BRG_CF_CL_ACC           		,
AVG_MS_CL_BRG_OTHER_CL_ACC        		,
AVG_MS_CL_BRG_LSE_CL_ACC          		,
AVG_MS_CL_BRG_LSE_PQ_CL_ACC       		,
AVG_MS_CL_BRG_LSE_CS_CL_ACC       		,
AVG_MS_CL_BRG_LSE_LSG_CL_ACC      		,
AVG_MS_CL_BRG_LSE_R_CL_ACC        		,
AVG_MS_CL_BRG_LSE_CF_CL_ACC       		,
AVG_MS_CL_BRG_LSE_OTHER_CL_ACC    		,
MIN_MS_CL_CL_ACC                 ,
MIN_MS_CL_BK_CL_ACC              ,
MIN_MS_CL_BK_PQ_CL_ACC           ,
MIN_MS_CL_BK_CS_CL_ACC           ,
MIN_MS_CL_BK_LSG_CL_ACC          ,
MIN_MS_CL_BK_R_CL_ACC            ,
MIN_MS_CL_BK_CF_CL_ACC           ,
MIN_MS_CL_BK_OTHER_CL_ACC        ,
MIN_MS_CL_LSE_CL_ACC             ,
MIN_MS_CL_LSE_PQ_CL_ACC          ,
MIN_MS_CL_LSE_CS_CL_ACC          ,
MIN_MS_CL_LSE_LSG_CL_ACC         ,
MIN_MS_CL_LSE_R_CL_ACC           ,
MIN_MS_CL_LSE_CF_CL_ACC          ,
MIN_MS_CL_LSE_OTHER_CL_ACC       ,
MIN_MS_CL_UN_CRE_CL_ACC          ,
MIN_MS_CL_UN_CRE_PQ_CL_ACC       ,
MIN_MS_CL_UN_CRE_CS_CL_ACC       ,
MIN_MS_CL_UN_CRE_LSG_CL_ACC      ,
MIN_MS_CL_UN_CRE_R_CL_ACC        ,
MIN_MS_CL_UN_CRE_CF_CL_ACC       ,
MIN_MS_CL_UN_CRE_OTHER_CL_ACC    ,
MIN_MS_CL_OTHER_FIN_CL_ACC       ,
MIN_MS_CL_OTHER_FIN_PQ_CL_ACC    ,
MIN_MS_CL_OTHER_FIN_CS_CL_ACC    ,
MIN_MS_CL_OTHER_FIN_LSG_CL_ACC   ,
MIN_MS_CL_OTHER_FIN_R_CL_ACC     ,
MIN_MS_CL_OTHER_FIN_CF_CL_ACC    ,
MIN_MS_CL_OTHER_FIN_OTHER_CL_ACC ,
MIN_MS_CL_GBN_CL_ACC             ,
MIN_MS_CL_GBN_PQ_CL_ACC          ,
MIN_MS_CL_GBN_CS_CL_ACC          ,
MIN_MS_CL_GBN_LSG_CL_ACC         ,
MIN_MS_CL_GBN_R_CL_ACC           ,
MIN_MS_CL_GBN_CF_CL_ACC          ,
MIN_MS_CL_GBN_OTHER_CL_ACC       ,
MIN_MS_CL_BRG_CL_ACC             ,
MIN_MS_CL_BRG_PQ_CL_ACC          ,
MIN_MS_CL_BRG_CS_CL_ACC          ,
MIN_MS_CL_BRG_LSG_CL_ACC         ,
MIN_MS_CL_BRG_R_CL_ACC           ,
MIN_MS_CL_BRG_CF_CL_ACC          ,
MIN_MS_CL_BRG_OTHER_CL_ACC       ,
MIN_MS_CL_BRG_LSE_CL_ACC         ,
MIN_MS_CL_BRG_LSE_PQ_CL_ACC      ,
MIN_MS_CL_BRG_LSE_CS_CL_ACC      ,
MIN_MS_CL_BRG_LSE_LSG_CL_ACC     ,
MIN_MS_CL_BRG_LSE_R_CL_ACC       ,
MIN_MS_CL_BRG_LSE_CF_CL_ACC      ,
MIN_MS_CL_BRG_LSE_OTHER_CL_ACC   ,
NUM_CLAVOBS_CL_ACC                   ,
NUM_CLAVOBS_BK_CL_ACC                ,
NUM_CLAVOBS_BK_PQ_CL_ACC             ,
NUM_CLAVOBS_BK_CS_CL_ACC             ,
NUM_CLAVOBS_BK_LSG_CL_ACC            ,
NUM_CLAVOBS_BK_R_CL_ACC              ,
NUM_CLAVOBS_BK_CF_CL_ACC             ,
NUM_CLAVOBS_BK_OTHER_CL_ACC          ,
NUM_CLAVOBS_LSE_CL_ACC               ,
NUM_CLAVOBS_LSE_PQ_CL_ACC            ,
NUM_CLAVOBS_LSE_CS_CL_ACC            ,
NUM_CLAVOBS_LSE_LSG_CL_ACC           ,
NUM_CLAVOBS_LSE_R_CL_ACC             ,
NUM_CLAVOBS_LSE_CF_CL_ACC            ,
NUM_CLAVOBS_LSE_OTHER_CL_ACC         ,
NUM_CLAVOBS_UN_CRE_CL_ACC            ,
NUM_CLAVOBS_UN_CRE_PQ_CL_ACC         ,
NUM_CLAVOBS_UN_CRE_CS_CL_ACC         ,
NUM_CLAVOBS_UN_CRE_LSG_CL_ACC        ,
NUM_CLAVOBS_UN_CRE_R_CL_ACC          ,
NUM_CLAVOBS_UN_CRE_CF_CL_ACC         ,
NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC      ,
NUM_CLAVOBS_OTHER_FIN_CL_ACC         ,
NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC      ,
NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC      ,
NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC     ,
NUM_CLAVOBS_OTHER_FIN_R_CL_ACC       ,
NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC      ,
NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC   ,
NUM_CLAVOBS_GBN_CL_ACC               ,
NUM_CLAVOBS_GBN_PQ_CL_ACC            ,
NUM_CLAVOBS_GBN_CS_CL_ACC            ,
NUM_CLAVOBS_GBN_LSG_CL_ACC           ,
NUM_CLAVOBS_GBN_R_CL_ACC             ,
NUM_CLAVOBS_GBN_CF_CL_ACC            ,
NUM_CLAVOBS_GBN_OTHER_CL_ACC         ,
NUM_CLAVOBS_BRG_CL_ACC               ,
NUM_CLAVOBS_BRG_PQ_CL_ACC            ,
NUM_CLAVOBS_BRG_CS_CL_ACC            ,
NUM_CLAVOBS_BRG_LSG_CL_ACC           ,
NUM_CLAVOBS_BRG_R_CL_ACC             ,
NUM_CLAVOBS_BRG_CF_CL_ACC            ,
NUM_CLAVOBS_BRG_OTHER_CL_ACC         ,
NUM_CLAVOBS_BRG_LSE_CL_ACC           ,
NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC        ,
NUM_CLAVOBS_BRG_LSE_CS_CL_ACC        ,
NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC       ,
NUM_CLAVOBS_BRG_LSE_R_CL_ACC         ,
NUM_CLAVOBS_BRG_LSE_CF_CL_ACC        ,
NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC     ,
NUM_CLAVOBS_CL_ACC_03M                  ,
NUM_CLAVOBS_BK_CL_ACC_03M               ,
NUM_CLAVOBS_BK_PQ_CL_ACC_03M            ,
NUM_CLAVOBS_BK_CS_CL_ACC_03M            ,
NUM_CLAVOBS_BK_LSG_CL_ACC_03M           ,
NUM_CLAVOBS_BK_R_CL_ACC_03M             ,
NUM_CLAVOBS_BK_CF_CL_ACC_03M            ,
NUM_CLAVOBS_BK_OTHER_CL_ACC_03M         ,
NUM_CLAVOBS_LSE_CL_ACC_03M              ,
NUM_CLAVOBS_LSE_PQ_CL_ACC_03M           ,
NUM_CLAVOBS_LSE_CS_CL_ACC_03M           ,
NUM_CLAVOBS_LSE_LSG_CL_ACC_03M          ,
NUM_CLAVOBS_LSE_R_CL_ACC_03M            ,
NUM_CLAVOBS_LSE_CF_CL_ACC_03M           ,
NUM_CLAVOBS_LSE_OTHER_CL_ACC_03M        ,
NUM_CLAVOBS_UN_CRE_CL_ACC_03M           ,
NUM_CLAVOBS_UN_CRE_PQ_CL_ACC_03M        ,
NUM_CLAVOBS_UN_CRE_CS_CL_ACC_03M        ,
NUM_CLAVOBS_UN_CRE_LSG_CL_ACC_03M       ,
NUM_CLAVOBS_UN_CRE_R_CL_ACC_03M         ,
NUM_CLAVOBS_UN_CRE_CF_CL_ACC_03M        ,
NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC_03M     ,
NUM_CLAVOBS_OTHER_FIN_CL_ACC_03M        ,
NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC_03M     ,
NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC_03M     ,
NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC_03M    ,
NUM_CLAVOBS_OTHER_FIN_R_CL_ACC_03M      ,
NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC_03M     ,
NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC_03M  ,
NUM_CLAVOBS_GBN_CL_ACC_03M              ,
NUM_CLAVOBS_GBN_PQ_CL_ACC_03M           ,
NUM_CLAVOBS_GBN_CS_CL_ACC_03M           ,
NUM_CLAVOBS_GBN_LSG_CL_ACC_03M          ,
NUM_CLAVOBS_GBN_R_CL_ACC_03M            ,
NUM_CLAVOBS_GBN_CF_CL_ACC_03M           ,
NUM_CLAVOBS_GBN_OTHER_CL_ACC_03M        ,
NUM_CLAVOBS_BRG_CL_ACC_03M              ,
NUM_CLAVOBS_BRG_PQ_CL_ACC_03M           ,
NUM_CLAVOBS_BRG_CS_CL_ACC_03M           ,
NUM_CLAVOBS_BRG_LSG_CL_ACC_03M          ,
NUM_CLAVOBS_BRG_R_CL_ACC_03M            ,
NUM_CLAVOBS_BRG_CF_CL_ACC_03M           ,
NUM_CLAVOBS_BRG_OTHER_CL_ACC_03M        ,
NUM_CLAVOBS_BRG_LSE_CL_ACC_03M          ,
NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC_03M       ,
NUM_CLAVOBS_BRG_LSE_CS_CL_ACC_03M       ,
NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC_03M      ,
NUM_CLAVOBS_BRG_LSE_R_CL_ACC_03M        ,
NUM_CLAVOBS_BRG_LSE_CF_CL_ACC_03M       ,
NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC_03M    ,
NUM_CLAVOBS_CL_ACC_06M                  ,
NUM_CLAVOBS_BK_CL_ACC_06M               ,
NUM_CLAVOBS_BK_PQ_CL_ACC_06M            ,
NUM_CLAVOBS_BK_CS_CL_ACC_06M            ,
NUM_CLAVOBS_BK_LSG_CL_ACC_06M           ,
NUM_CLAVOBS_BK_R_CL_ACC_06M             ,
NUM_CLAVOBS_BK_CF_CL_ACC_06M            ,
NUM_CLAVOBS_BK_OTHER_CL_ACC_06M         ,
NUM_CLAVOBS_LSE_CL_ACC_06M              ,
NUM_CLAVOBS_LSE_PQ_CL_ACC_06M           ,
NUM_CLAVOBS_LSE_CS_CL_ACC_06M           ,
NUM_CLAVOBS_LSE_LSG_CL_ACC_06M          ,
NUM_CLAVOBS_LSE_R_CL_ACC_06M            ,
NUM_CLAVOBS_LSE_CF_CL_ACC_06M           ,
NUM_CLAVOBS_LSE_OTHER_CL_ACC_06M        ,
NUM_CLAVOBS_UN_CRE_CL_ACC_06M           ,
NUM_CLAVOBS_UN_CRE_PQ_CL_ACC_06M        ,
NUM_CLAVOBS_UN_CRE_CS_CL_ACC_06M        ,
NUM_CLAVOBS_UN_CRE_LSG_CL_ACC_06M       ,
NUM_CLAVOBS_UN_CRE_R_CL_ACC_06M         ,
NUM_CLAVOBS_UN_CRE_CF_CL_ACC_06M        ,
NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC_06M     ,
NUM_CLAVOBS_OTHER_FIN_CL_ACC_06M        ,
NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC_06M     ,
NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC_06M     ,
NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC_06M    ,
NUM_CLAVOBS_OTHER_FIN_R_CL_ACC_06M      ,
NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC_06M     ,
NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC_06M  ,
NUM_CLAVOBS_GBN_CL_ACC_06M              ,
NUM_CLAVOBS_GBN_PQ_CL_ACC_06M           ,
NUM_CLAVOBS_GBN_CS_CL_ACC_06M           ,
NUM_CLAVOBS_GBN_LSG_CL_ACC_06M          ,
NUM_CLAVOBS_GBN_R_CL_ACC_06M            ,
NUM_CLAVOBS_GBN_CF_CL_ACC_06M           ,
NUM_CLAVOBS_GBN_OTHER_CL_ACC_06M        ,
NUM_CLAVOBS_BRG_CL_ACC_06M              ,
NUM_CLAVOBS_BRG_PQ_CL_ACC_06M           ,
NUM_CLAVOBS_BRG_CS_CL_ACC_06M           ,
NUM_CLAVOBS_BRG_LSG_CL_ACC_06M          ,
NUM_CLAVOBS_BRG_R_CL_ACC_06M            ,
NUM_CLAVOBS_BRG_CF_CL_ACC_06M           ,
NUM_CLAVOBS_BRG_OTHER_CL_ACC_06M        ,
NUM_CLAVOBS_BRG_LSE_CL_ACC_06M          ,
NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC_06M       ,
NUM_CLAVOBS_BRG_LSE_CS_CL_ACC_06M       ,
NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC_06M      ,
NUM_CLAVOBS_BRG_LSE_R_CL_ACC_06M        ,
NUM_CLAVOBS_BRG_LSE_CF_CL_ACC_06M       ,
NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC_06M    ,
NUM_CLAVOBS_CL_ACC_12M                  ,
NUM_CLAVOBS_BK_CL_ACC_12M               ,
NUM_CLAVOBS_BK_PQ_CL_ACC_12M            ,
NUM_CLAVOBS_BK_CS_CL_ACC_12M            ,
NUM_CLAVOBS_BK_LSG_CL_ACC_12M           ,
NUM_CLAVOBS_BK_R_CL_ACC_12M             ,
NUM_CLAVOBS_BK_CF_CL_ACC_12M            ,
NUM_CLAVOBS_BK_OTHER_CL_ACC_12M         ,
NUM_CLAVOBS_LSE_CL_ACC_12M              ,
NUM_CLAVOBS_LSE_PQ_CL_ACC_12M           ,
NUM_CLAVOBS_LSE_CS_CL_ACC_12M           ,
NUM_CLAVOBS_LSE_LSG_CL_ACC_12M          ,
NUM_CLAVOBS_LSE_R_CL_ACC_12M            ,
NUM_CLAVOBS_LSE_CF_CL_ACC_12M           ,
NUM_CLAVOBS_LSE_OTHER_CL_ACC_12M        ,
NUM_CLAVOBS_UN_CRE_CL_ACC_12M           ,
NUM_CLAVOBS_UN_CRE_PQ_CL_ACC_12M        ,
NUM_CLAVOBS_UN_CRE_CS_CL_ACC_12M        ,
NUM_CLAVOBS_UN_CRE_LSG_CL_ACC_12M       ,
NUM_CLAVOBS_UN_CRE_R_CL_ACC_12M         ,
NUM_CLAVOBS_UN_CRE_CF_CL_ACC_12M        ,
NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC_12M     ,
NUM_CLAVOBS_OTHER_FIN_CL_ACC_12M        ,
NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC_12M     ,
NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC_12M     ,
NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC_12M    ,
NUM_CLAVOBS_OTHER_FIN_R_CL_ACC_12M      ,
NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC_12M     ,
NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC_12M  ,
NUM_CLAVOBS_GBN_CL_ACC_12M              ,
NUM_CLAVOBS_GBN_PQ_CL_ACC_12M           ,
NUM_CLAVOBS_GBN_CS_CL_ACC_12M           ,
NUM_CLAVOBS_GBN_LSG_CL_ACC_12M          ,
NUM_CLAVOBS_GBN_R_CL_ACC_12M            ,
NUM_CLAVOBS_GBN_CF_CL_ACC_12M           ,
NUM_CLAVOBS_GBN_OTHER_CL_ACC_12M        ,
NUM_CLAVOBS_BRG_CL_ACC_12M              ,
NUM_CLAVOBS_BRG_PQ_CL_ACC_12M           ,
NUM_CLAVOBS_BRG_CS_CL_ACC_12M           ,
NUM_CLAVOBS_BRG_LSG_CL_ACC_12M          ,
NUM_CLAVOBS_BRG_R_CL_ACC_12M            ,
NUM_CLAVOBS_BRG_CF_CL_ACC_12M           ,
NUM_CLAVOBS_BRG_OTHER_CL_ACC_12M        ,
NUM_CLAVOBS_BRG_LSE_CL_ACC_12M          ,
NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC_12M       ,
NUM_CLAVOBS_BRG_LSE_CS_CL_ACC_12M       ,
NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC_12M      ,
NUM_CLAVOBS_BRG_LSE_R_CL_ACC_12M        ,
NUM_CLAVOBS_BRG_LSE_CF_CL_ACC_12M       ,
NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC_12M    

FROM
    dbriskdatamart.MZM_MCV_CREDITOS_LIQUIDADOS__${FECHA_CALIFICACION} T1
    
LEFT JOIN (SELECT RFC, FOLIO, 
MAX(CR_MS_CL) AS MAX_MS_CL_CL_ACC                  		,
MAX(   CASE   WHEN  BK_CL_ACC              = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_CL_ACC               		,
MAX(   CASE   WHEN  BK_PQ_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_PQ_CL_ACC            		,
MAX(   CASE   WHEN  BK_CS_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_CS_CL_ACC            		,
MAX(   CASE   WHEN  BK_LSG_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_LSG_CL_ACC           		,
MAX(   CASE   WHEN  BK_R_CL_ACC            = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_R_CL_ACC             		,
MAX(   CASE   WHEN  BK_CF_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_CF_CL_ACC            		,
MAX(   CASE   WHEN  BK_OTHER_CL_ACC        = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BK_OTHER_CL_ACC         		,
MAX(   CASE   WHEN  LSE_CL_ACC             = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_CL_ACC              		,
MAX(   CASE   WHEN  LSE_PQ_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_PQ_CL_ACC           		,
MAX(   CASE   WHEN  LSE_CS_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_CS_CL_ACC           		,
MAX(   CASE   WHEN  LSE_LSG_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_LSG_CL_ACC          		,
MAX(   CASE   WHEN  LSE_R_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_R_CL_ACC            		,
MAX(   CASE   WHEN  LSE_CF_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_CF_CL_ACC           		,
MAX(   CASE   WHEN  LSE_OTHER_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_LSE_OTHER_CL_ACC        		,
MAX(   CASE   WHEN  UN_CRE_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_CL_ACC           		,
MAX(   CASE   WHEN  UN_CRE_PQ_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_PQ_CL_ACC        		,
MAX(   CASE   WHEN  UN_CRE_CS_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_CS_CL_ACC        		,
MAX(   CASE   WHEN  UN_CRE_LSG_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_LSG_CL_ACC       		,
MAX(   CASE   WHEN  UN_CRE_R_CL_ACC        = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_R_CL_ACC         		,
MAX(   CASE   WHEN  UN_CRE_CF_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_CF_CL_ACC        		,
MAX(   CASE   WHEN  UN_CRE_OTHER_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_UN_CRE_OTHER_CL_ACC     		,
MAX(   CASE   WHEN  OTHER_FIN_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_CL_ACC        		,
MAX(   CASE   WHEN  OTHER_FIN_PQ_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_PQ_CL_ACC     		,
MAX(   CASE   WHEN  OTHER_FIN_CS_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_CS_CL_ACC     		,
MAX(   CASE   WHEN  OTHER_FIN_LSG_CL_ACC   = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_LSG_CL_ACC    		,
MAX(   CASE   WHEN  OTHER_FIN_R_CL_ACC     = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_R_CL_ACC      		,
MAX(   CASE   WHEN  OTHER_FIN_CF_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_CF_CL_ACC     		,
MAX(   CASE   WHEN  OTHER_FIN_OTHER_CL_ACC = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_OTHER_FIN_OTHER_CL_ACC  		,
MAX(   CASE   WHEN  GBN_CL_ACC             = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_CL_ACC              		,
MAX(   CASE   WHEN  GBN_PQ_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_PQ_CL_ACC           		,
MAX(   CASE   WHEN  GBN_CS_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_CS_CL_ACC           		,
MAX(   CASE   WHEN  GBN_LSG_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_LSG_CL_ACC          		,
MAX(   CASE   WHEN  GBN_R_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_R_CL_ACC            		,
MAX(   CASE   WHEN  GBN_CF_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_CF_CL_ACC           		,
MAX(   CASE   WHEN  GBN_OTHER_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_GBN_OTHER_CL_ACC        		,
MAX(   CASE   WHEN  BRG_CL_ACC             = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_CL_ACC              		,
MAX(   CASE   WHEN  BRG_PQ_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_PQ_CL_ACC           		,
MAX(   CASE   WHEN  BRG_CS_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_CS_CL_ACC           		,
MAX(   CASE   WHEN  BRG_LSG_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSG_CL_ACC          		,
MAX(   CASE   WHEN  BRG_R_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_R_CL_ACC            		,
MAX(   CASE   WHEN  BRG_CF_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_CF_CL_ACC           		,
MAX(   CASE   WHEN  BRG_OTHER_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_OTHER_CL_ACC        		,
MAX(   CASE   WHEN  BRG_LSE_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_CL_ACC          		,
MAX(   CASE   WHEN  BRG_LSE_PQ_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_PQ_CL_ACC       		,
MAX(   CASE   WHEN  BRG_LSE_CS_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_CS_CL_ACC       		,
MAX(   CASE   WHEN  BRG_LSE_LSG_CL_ACC     = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_LSG_CL_ACC      		,
MAX(   CASE   WHEN  BRG_LSE_R_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_R_CL_ACC        		,
MAX(   CASE   WHEN  BRG_LSE_CF_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_CF_CL_ACC       		,
MAX(   CASE   WHEN  BRG_LSE_OTHER_CL_ACC   = 1 																  THEN  CR_MS_CL ELSE NULL END) AS MAX_MS_CL_BRG_LSE_OTHER_CL_ACC    		,
AVG(CR_MS_CL) AS AVG_MS_CL_CL_ACC                  		,
AVG(   CASE   WHEN  BK_CL_ACC              = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_CL_ACC               		,
AVG(   CASE   WHEN  BK_PQ_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_PQ_CL_ACC            		,
AVG(   CASE   WHEN  BK_CS_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_CS_CL_ACC            		,
AVG(   CASE   WHEN  BK_LSG_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_LSG_CL_ACC           		,
AVG(   CASE   WHEN  BK_R_CL_ACC            = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_R_CL_ACC             		,
AVG(   CASE   WHEN  BK_CF_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_CF_CL_ACC            		,
AVG(   CASE   WHEN  BK_OTHER_CL_ACC        = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BK_OTHER_CL_ACC         		,
AVG(   CASE   WHEN  LSE_CL_ACC             = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_CL_ACC              		,
AVG(   CASE   WHEN  LSE_PQ_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_PQ_CL_ACC           		,
AVG(   CASE   WHEN  LSE_CS_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_CS_CL_ACC           		,
AVG(   CASE   WHEN  LSE_LSG_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_LSG_CL_ACC          		,
AVG(   CASE   WHEN  LSE_R_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_R_CL_ACC            		,
AVG(   CASE   WHEN  LSE_CF_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_CF_CL_ACC           		,
AVG(   CASE   WHEN  LSE_OTHER_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_LSE_OTHER_CL_ACC        		,
AVG(   CASE   WHEN  UN_CRE_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_CL_ACC           		,
AVG(   CASE   WHEN  UN_CRE_PQ_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_PQ_CL_ACC        		,
AVG(   CASE   WHEN  UN_CRE_CS_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_CS_CL_ACC        		,
AVG(   CASE   WHEN  UN_CRE_LSG_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_LSG_CL_ACC       		,
AVG(   CASE   WHEN  UN_CRE_R_CL_ACC        = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_R_CL_ACC         		,
AVG(   CASE   WHEN  UN_CRE_CF_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_CF_CL_ACC        		,
AVG(   CASE   WHEN  UN_CRE_OTHER_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_UN_CRE_OTHER_CL_ACC     		,
AVG(   CASE   WHEN  OTHER_FIN_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_CL_ACC        		,
AVG(   CASE   WHEN  OTHER_FIN_PQ_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_PQ_CL_ACC     		,
AVG(   CASE   WHEN  OTHER_FIN_CS_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_CS_CL_ACC     		,
AVG(   CASE   WHEN  OTHER_FIN_LSG_CL_ACC   = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_LSG_CL_ACC    		,
AVG(   CASE   WHEN  OTHER_FIN_R_CL_ACC     = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_R_CL_ACC      		,
AVG(   CASE   WHEN  OTHER_FIN_CF_CL_ACC    = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_CF_CL_ACC     		,
AVG(   CASE   WHEN  OTHER_FIN_OTHER_CL_ACC = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_OTHER_FIN_OTHER_CL_ACC  		,
AVG(   CASE   WHEN  GBN_CL_ACC             = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_CL_ACC              		,
AVG(   CASE   WHEN  GBN_PQ_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_PQ_CL_ACC           		,
AVG(   CASE   WHEN  GBN_CS_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_CS_CL_ACC           		,
AVG(   CASE   WHEN  GBN_LSG_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_LSG_CL_ACC          		,
AVG(   CASE   WHEN  GBN_R_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_R_CL_ACC            		,
AVG(   CASE   WHEN  GBN_CF_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_CF_CL_ACC           		,
AVG(   CASE   WHEN  GBN_OTHER_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_GBN_OTHER_CL_ACC        		,
AVG(   CASE   WHEN  BRG_CL_ACC             = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_CL_ACC              		,
AVG(   CASE   WHEN  BRG_PQ_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_PQ_CL_ACC           		,
AVG(   CASE   WHEN  BRG_CS_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_CS_CL_ACC           		,
AVG(   CASE   WHEN  BRG_LSG_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSG_CL_ACC          		,
AVG(   CASE   WHEN  BRG_R_CL_ACC           = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_R_CL_ACC            		,
AVG(   CASE   WHEN  BRG_CF_CL_ACC          = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_CF_CL_ACC           		,
AVG(   CASE   WHEN  BRG_OTHER_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_OTHER_CL_ACC        		,
AVG(   CASE   WHEN  BRG_LSE_CL_ACC         = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_CL_ACC          		,
AVG(   CASE   WHEN  BRG_LSE_PQ_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_PQ_CL_ACC       		,
AVG(   CASE   WHEN  BRG_LSE_CS_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_CS_CL_ACC       		,
AVG(   CASE   WHEN  BRG_LSE_LSG_CL_ACC     = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_LSG_CL_ACC      		,
AVG(   CASE   WHEN  BRG_LSE_R_CL_ACC       = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_R_CL_ACC        		,
AVG(   CASE   WHEN  BRG_LSE_CF_CL_ACC      = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_CF_CL_ACC       		,
AVG(   CASE   WHEN  BRG_LSE_OTHER_CL_ACC   = 1 																  THEN  CR_MS_CL ELSE NULL END) AS AVG_MS_CL_BRG_LSE_OTHER_CL_ACC    		,
MIN(CR_MS_CL)      AS 	MIN_MS_CL_CL_ACC                 ,
MIN(   CASE  WHEN BK_CL_ACC              = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_CL_ACC              ,
MIN(   CASE  WHEN BK_PQ_CL_ACC           = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_PQ_CL_ACC           ,
MIN(   CASE  WHEN BK_CS_CL_ACC           = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_CS_CL_ACC           ,
MIN(   CASE  WHEN BK_LSG_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_LSG_CL_ACC          ,
MIN(   CASE  WHEN BK_R_CL_ACC            = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_R_CL_ACC            ,
MIN(   CASE  WHEN BK_CF_CL_ACC           = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_CF_CL_ACC           ,
MIN(   CASE  WHEN BK_OTHER_CL_ACC        = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BK_OTHER_CL_ACC        ,
MIN(   CASE  WHEN LSE_CL_ACC             = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_CL_ACC             ,
MIN(   CASE  WHEN LSE_PQ_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_PQ_CL_ACC          ,
MIN(   CASE  WHEN LSE_CS_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_CS_CL_ACC          ,
MIN(   CASE  WHEN LSE_LSG_CL_ACC         = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_LSG_CL_ACC         ,
MIN(   CASE  WHEN LSE_R_CL_ACC           = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_R_CL_ACC           ,
MIN(   CASE  WHEN LSE_CF_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_CF_CL_ACC          ,
MIN(   CASE  WHEN LSE_OTHER_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_LSE_OTHER_CL_ACC       ,
MIN(   CASE  WHEN UN_CRE_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_CL_ACC          ,
MIN(   CASE  WHEN UN_CRE_PQ_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_PQ_CL_ACC       ,
MIN(   CASE  WHEN UN_CRE_CS_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_CS_CL_ACC       ,
MIN(   CASE  WHEN UN_CRE_LSG_CL_ACC      = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_LSG_CL_ACC      ,
MIN(   CASE  WHEN UN_CRE_R_CL_ACC        = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_R_CL_ACC        ,
MIN(   CASE  WHEN UN_CRE_CF_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_CF_CL_ACC       ,
MIN(   CASE  WHEN UN_CRE_OTHER_CL_ACC    = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_UN_CRE_OTHER_CL_ACC    ,
MIN(   CASE  WHEN OTHER_FIN_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_CL_ACC       ,
MIN(   CASE  WHEN OTHER_FIN_PQ_CL_ACC    = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_PQ_CL_ACC    ,
MIN(   CASE  WHEN OTHER_FIN_CS_CL_ACC    = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_CS_CL_ACC    ,
MIN(   CASE  WHEN OTHER_FIN_LSG_CL_ACC   = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_LSG_CL_ACC   ,
MIN(   CASE  WHEN OTHER_FIN_R_CL_ACC     = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_R_CL_ACC     ,
MIN(   CASE  WHEN OTHER_FIN_CF_CL_ACC    = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_CF_CL_ACC    ,
MIN(   CASE  WHEN OTHER_FIN_OTHER_CL_ACC = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_OTHER_FIN_OTHER_CL_ACC ,
MIN(   CASE  WHEN GBN_CL_ACC             = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_CL_ACC             ,
MIN(   CASE  WHEN GBN_PQ_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_PQ_CL_ACC          ,
MIN(   CASE  WHEN GBN_CS_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_CS_CL_ACC          ,
MIN(   CASE  WHEN GBN_LSG_CL_ACC         = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_LSG_CL_ACC         ,
MIN(   CASE  WHEN GBN_R_CL_ACC           = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_R_CL_ACC           ,
MIN(   CASE  WHEN GBN_CF_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_CF_CL_ACC          ,
MIN(   CASE  WHEN GBN_OTHER_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_GBN_OTHER_CL_ACC       ,
MIN(   CASE  WHEN BRG_CL_ACC             = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_CL_ACC             ,
MIN(   CASE  WHEN BRG_PQ_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_PQ_CL_ACC          ,
MIN(   CASE  WHEN BRG_CS_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_CS_CL_ACC          ,
MIN(   CASE  WHEN BRG_LSG_CL_ACC         = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSG_CL_ACC         ,
MIN(   CASE  WHEN BRG_R_CL_ACC           = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_R_CL_ACC           ,
MIN(   CASE  WHEN BRG_CF_CL_ACC          = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_CF_CL_ACC          ,
MIN(   CASE  WHEN BRG_OTHER_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_OTHER_CL_ACC       ,
MIN(   CASE  WHEN BRG_LSE_CL_ACC         = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_CL_ACC         ,
MIN(   CASE  WHEN BRG_LSE_PQ_CL_ACC      = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_PQ_CL_ACC      ,
MIN(   CASE  WHEN BRG_LSE_CS_CL_ACC      = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_CS_CL_ACC      ,
MIN(   CASE  WHEN BRG_LSE_LSG_CL_ACC     = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_LSG_CL_ACC     ,
MIN(   CASE  WHEN BRG_LSE_R_CL_ACC       = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_R_CL_ACC       ,
MIN(   CASE  WHEN BRG_LSE_CF_CL_ACC      = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_CF_CL_ACC      ,
MIN(   CASE  WHEN BRG_LSE_OTHER_CL_ACC   = 1                                                                  THEN  CR_MS_CL ELSE NULL END)      AS 	MIN_MS_CL_BRG_LSE_OTHER_CL_ACC   ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0                                AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_CL_ACC                   ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_CL_ACC              = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_CL_ACC                ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_PQ_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_PQ_CL_ACC             ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_CS_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_CS_CL_ACC             ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_LSG_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_LSG_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_R_CL_ACC            = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_R_CL_ACC              ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_CF_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_CF_CL_ACC             ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_OTHER_CL_ACC        = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BK_OTHER_CL_ACC          ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_CL_ACC             = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_CL_ACC               ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_PQ_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_CS_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_LSG_CL_ACC           ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_R_CL_ACC             ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_CF_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_LSE_OTHER_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_PQ_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_PQ_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_CS_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_CS_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_LSG_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_LSG_CL_ACC        ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_R_CL_ACC        = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_R_CL_ACC          ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_CF_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_CF_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_OTHER_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC      ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_PQ_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC      ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_CS_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC      ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_LSG_CL_ACC   = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC     ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_R_CL_ACC     = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_R_CL_ACC       ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_CF_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC      ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_OTHER_CL_ACC = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC   ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_CL_ACC             = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_CL_ACC               ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_PQ_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_CS_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_LSG_CL_ACC           ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_R_CL_ACC             ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_CF_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_GBN_OTHER_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_CL_ACC             = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_CL_ACC               ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_PQ_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_CS_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSG_CL_ACC           ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_R_CL_ACC             ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_CF_CL_ACC            ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_OTHER_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_CL_ACC           ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_PQ_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC        ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_CS_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_CS_CL_ACC        ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_LSG_CL_ACC     = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC       ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_R_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_R_CL_ACC         ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_CF_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_CF_CL_ACC        ,
COUNT( CASE  WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_OTHER_CL_ACC   = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS 	NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC     ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0                               AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_CL_ACC_03M                  ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_CL_ACC             = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CL_ACC_03M               ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_PQ_CL_ACC_03M            ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CS_CL_ACC_03M            ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_LSG_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_R_CL_ACC_03M             ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CF_CL_ACC_03M            ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BK_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_OTHER_CL_ACC_03M         ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_CL_ACC            = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CL_ACC_03M              ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_PQ_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_PQ_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_CS_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CS_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_LSG_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_LSG_CL_ACC_03M          ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_R_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_R_CL_ACC_03M            ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_CF_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CF_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND LSE_OTHER_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_OTHER_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_PQ_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_PQ_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_CS_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CS_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_LSG_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_LSG_CL_ACC_03M       ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_R_CL_ACC       = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_R_CL_ACC_03M         ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_CF_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CF_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND UN_CRE_OTHER_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC_03M     ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_PQ_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC_03M     ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_CS_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC_03M     ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_LSG_CL_ACC  = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC_03M    ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_R_CL_ACC    = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_R_CL_ACC_03M      ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_CF_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC_03M     ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND OTHER_FIN_OTHER_CL_ACC= 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC_03M  ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_CL_ACC            = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CL_ACC_03M              ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_PQ_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_PQ_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_CS_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CS_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_LSG_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_LSG_CL_ACC_03M          ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_R_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_R_CL_ACC_03M            ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_CF_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CF_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND GBN_OTHER_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_OTHER_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_CL_ACC            = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CL_ACC_03M              ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_PQ_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_PQ_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_CS_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CS_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSG_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSG_CL_ACC_03M          ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_R_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_R_CL_ACC_03M            ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_CF_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CF_CL_ACC_03M           ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_OTHER_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_OTHER_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CL_ACC_03M          ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_PQ_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC_03M       ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_CS_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CS_CL_ACC_03M       ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_LSG_CL_ACC    = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC_03M      ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_R_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_R_CL_ACC_03M        ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_CF_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CF_CL_ACC_03M       ,
COUNT( CASE   WHEN CR_MS_CL <4 AND CR_MS_CL >=0 AND BRG_LSE_OTHER_CL_ACC  = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC_03M    ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0                               AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_CL_ACC_06M                  ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_CL_ACC             = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CL_ACC_06M               ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_PQ_CL_ACC_06M            ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CS_CL_ACC_06M            ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_LSG_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_R_CL_ACC_06M             ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CF_CL_ACC_06M            ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BK_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_OTHER_CL_ACC_06M         ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_CL_ACC            = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CL_ACC_06M              ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_PQ_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_PQ_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_CS_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CS_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_LSG_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_LSG_CL_ACC_06M          ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_R_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_R_CL_ACC_06M            ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_CF_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CF_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND LSE_OTHER_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_OTHER_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_PQ_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_PQ_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_CS_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CS_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_LSG_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_LSG_CL_ACC_06M       ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_R_CL_ACC       = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_R_CL_ACC_06M         ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_CF_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CF_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND UN_CRE_OTHER_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC_06M     ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_PQ_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC_06M     ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_CS_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC_06M     ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_LSG_CL_ACC  = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC_06M    ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_R_CL_ACC    = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_R_CL_ACC_06M      ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_CF_CL_ACC   = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC_06M     ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND OTHER_FIN_OTHER_CL_ACC= 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC_06M  ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_CL_ACC            = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CL_ACC_06M              ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_PQ_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_PQ_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_CS_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CS_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_LSG_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_LSG_CL_ACC_06M          ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_R_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_R_CL_ACC_06M            ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_CF_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CF_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND GBN_OTHER_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_OTHER_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_CL_ACC            = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CL_ACC_06M              ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_PQ_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_PQ_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_CS_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CS_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSG_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSG_CL_ACC_06M          ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_R_CL_ACC          = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_R_CL_ACC_06M            ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_CF_CL_ACC         = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CF_CL_ACC_06M           ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_OTHER_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_OTHER_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_CL_ACC        = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CL_ACC_06M          ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_PQ_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC_06M       ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_CS_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CS_CL_ACC_06M       ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_LSG_CL_ACC    = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC_06M      ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_R_CL_ACC      = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_R_CL_ACC_06M        ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_CF_CL_ACC     = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CF_CL_ACC_06M       ,
COUNT( CASE   WHEN CR_MS_CL <7 AND CR_MS_CL >=0 AND BRG_LSE_OTHER_CL_ACC  = 1 AND clavobsvliq IS NOT NULL THEN clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC_06M    ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0                                AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_CL_ACC_12M                  ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_CL_ACC              = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CL_ACC_12M               ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_PQ_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_PQ_CL_ACC_12M            ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_CS_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CS_CL_ACC_12M            ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_LSG_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_LSG_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_R_CL_ACC            = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_R_CL_ACC_12M             ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_CF_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_CF_CL_ACC_12M            ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BK_OTHER_CL_ACC        = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BK_OTHER_CL_ACC_12M         ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_CL_ACC             = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CL_ACC_12M              ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_PQ_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CS_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_LSG_CL_ACC_12M          ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_R_CL_ACC_12M            ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_CF_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND LSE_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_LSE_OTHER_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_PQ_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_PQ_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_CS_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CS_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_LSG_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_LSG_CL_ACC_12M       ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_R_CL_ACC        = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_R_CL_ACC_12M         ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_CF_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_CF_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND UN_CRE_OTHER_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_UN_CRE_OTHER_CL_ACC_12M     ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_PQ_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_PQ_CL_ACC_12M     ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_CS_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CS_CL_ACC_12M     ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_LSG_CL_ACC   = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_LSG_CL_ACC_12M    ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_R_CL_ACC     = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_R_CL_ACC_12M      ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_CF_CL_ACC    = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_CF_CL_ACC_12M     ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND OTHER_FIN_OTHER_CL_ACC = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_OTHER_FIN_OTHER_CL_ACC_12M  ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_CL_ACC             = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CL_ACC_12M              ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_PQ_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CS_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_LSG_CL_ACC_12M          ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_R_CL_ACC_12M            ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_CF_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND GBN_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_GBN_OTHER_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_CL_ACC             = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CL_ACC_12M              ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_PQ_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_PQ_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_CS_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CS_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSG_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSG_CL_ACC_12M          ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_R_CL_ACC           = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_R_CL_ACC_12M            ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_CF_CL_ACC          = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_CF_CL_ACC_12M           ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_OTHER_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_OTHER_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_CL_ACC         = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CL_ACC_12M          ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_PQ_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_PQ_CL_ACC_12M       ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_CS_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CS_CL_ACC_12M       ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_LSG_CL_ACC     = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_LSG_CL_ACC_12M      ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_R_CL_ACC       = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_R_CL_ACC_12M        ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_CF_CL_ACC      = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_CF_CL_ACC_12M       ,
COUNT( CASE WHEN CR_MS_CL <13 AND CR_MS_CL >=0 AND BRG_LSE_OTHER_CL_ACC   = 1 AND clavobsvliq IS NOT NULL  THEN  clavobsvliq ELSE NULL END) AS NUM_CLAVOBS_BRG_LSE_OTHER_CL_ACC_12M    
FROM dbriskdatamart.MZM_MCV_CREDITOS_LIQUIDADOS__${FECHA_CALIFICACION}  GROUP BY RFC, FOLIO) T350 ON T1.FOLIO = T350.FOLIO;

SELECT * FROM dbriskdatamart.MZM_MCV_VAR_CR_CL_ACC_2__${FECHA_CALIFICACION} LIMIT 100;
