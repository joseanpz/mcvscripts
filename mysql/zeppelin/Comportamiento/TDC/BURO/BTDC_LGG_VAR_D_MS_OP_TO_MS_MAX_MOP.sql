%hive

DROP TABLE IF EXISTS dbmymwork.BTDC_LGG_VAR_D_MS_OP_TO_MS_MAX_MOP;
CREATE TABLE dbmymwork.BTDC_LGG_VAR_D_MS_OP_TO_MS_MAX_MOP
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'

LOCATION 's3://boi-banregio/datalake/data/InteligenciaRiesgos/M&M/BTDC/VARIABLES/BTDC_LGG_VAR_D_MS_OP_TO_MS_MAX_MOP' AS

SELECT
CUENTADEREFERENCIA,
FECHA_CARTERA,
-- NUM
COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   AS NUM_D_MS_OP_TO_MS_MAX_MOP_BK_AU   ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_M)    AS NUM_D_MS_OP_TO_MS_MAX_MOP_BK_M    ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   AS NUM_D_MS_OP_TO_MS_MAX_MOP_BK_PL   ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_R)    AS NUM_D_MS_OP_TO_MS_MAX_MOP_BK_R    ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_BK)      AS NUM_D_MS_OP_TO_MS_MAX_MOP_BK      ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  AS NUM_D_MS_OP_TO_MS_MAX_MOP_NBK_AU  ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   AS NUM_D_MS_OP_TO_MS_MAX_MOP_NBK_M   ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  AS NUM_D_MS_OP_TO_MS_MAX_MOP_NBK_PL  ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   AS NUM_D_MS_OP_TO_MS_MAX_MOP_NBK_R   ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK)     AS NUM_D_MS_OP_TO_MS_MAX_MOP_NBK     ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_AMX)     AS NUM_D_MS_OP_TO_MS_MAX_MOP_AMX     ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_AU)      AS NUM_D_MS_OP_TO_MS_MAX_MOP_AU      ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_M)       AS NUM_D_MS_OP_TO_MS_MAX_MOP_M       ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_PL)      AS NUM_D_MS_OP_TO_MS_MAX_MOP_PL      ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_R)       AS NUM_D_MS_OP_TO_MS_MAX_MOP_R       ,
COUNT(D_MS_OP_TO_MS_MAX_MOP)         AS NUM_D_MS_OP_TO_MS_MAX_MOP         ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_TU     ) AS NUM_D_MS_OP_TO_MS_MAX_MOP_TU      ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) AS NUM_D_MS_OP_TO_MS_MAX_MOP_TU_ALL  ,
COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) AS NUM_D_MS_OP_TO_MS_MAX_MOP_NBK_TU  ,

-- MAX
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   AS MAX_D_MS_OP_TO_MS_MAX_MOP_BK_AU  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_M)    AS MAX_D_MS_OP_TO_MS_MAX_MOP_BK_M   ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   AS MAX_D_MS_OP_TO_MS_MAX_MOP_BK_PL  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_R)    AS MAX_D_MS_OP_TO_MS_MAX_MOP_BK_R   ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK)      AS MAX_D_MS_OP_TO_MS_MAX_MOP_BK     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  AS MAX_D_MS_OP_TO_MS_MAX_MOP_NBK_AU ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   AS MAX_D_MS_OP_TO_MS_MAX_MOP_NBK_M  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  AS MAX_D_MS_OP_TO_MS_MAX_MOP_NBK_PL ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   AS MAX_D_MS_OP_TO_MS_MAX_MOP_NBK_R  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK)     AS MAX_D_MS_OP_TO_MS_MAX_MOP_NBK    ,
MAX(D_MS_OP_TO_MS_MAX_MOP_AMX)     AS MAX_D_MS_OP_TO_MS_MAX_MOP_AMX    ,
MAX(D_MS_OP_TO_MS_MAX_MOP_AU)      AS MAX_D_MS_OP_TO_MS_MAX_MOP_AU     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_M)       AS MAX_D_MS_OP_TO_MS_MAX_MOP_M      ,
MAX(D_MS_OP_TO_MS_MAX_MOP_PL)      AS MAX_D_MS_OP_TO_MS_MAX_MOP_PL     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_R)       AS MAX_D_MS_OP_TO_MS_MAX_MOP_R      ,
MAX(D_MS_OP_TO_MS_MAX_MOP)         AS MAX_D_MS_OP_TO_MS_MAX_MOP        ,
MAX(D_MS_OP_TO_MS_MAX_MOP_TU     ) AS MAX_D_MS_OP_TO_MS_MAX_MOP_TU     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) AS MAX_D_MS_OP_TO_MS_MAX_MOP_TU_ALL ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) AS MAX_D_MS_OP_TO_MS_MAX_MOP_NBK_TU ,

-- SUM
SUM(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   AS SUM_D_MS_OP_TO_MS_MAX_MOP_BK_AU  ,
SUM(D_MS_OP_TO_MS_MAX_MOP_BK_M)    AS SUM_D_MS_OP_TO_MS_MAX_MOP_BK_M   ,
SUM(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   AS SUM_D_MS_OP_TO_MS_MAX_MOP_BK_PL  ,
SUM(D_MS_OP_TO_MS_MAX_MOP_BK_R)    AS SUM_D_MS_OP_TO_MS_MAX_MOP_BK_R   ,
SUM(D_MS_OP_TO_MS_MAX_MOP_BK)      AS SUM_D_MS_OP_TO_MS_MAX_MOP_BK     ,
SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  AS SUM_D_MS_OP_TO_MS_MAX_MOP_NBK_AU ,
SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   AS SUM_D_MS_OP_TO_MS_MAX_MOP_NBK_M  ,
SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  AS SUM_D_MS_OP_TO_MS_MAX_MOP_NBK_PL ,
SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   AS SUM_D_MS_OP_TO_MS_MAX_MOP_NBK_R  ,
SUM(D_MS_OP_TO_MS_MAX_MOP_NBK)     AS SUM_D_MS_OP_TO_MS_MAX_MOP_NBK    ,
SUM(D_MS_OP_TO_MS_MAX_MOP_AMX)     AS SUM_D_MS_OP_TO_MS_MAX_MOP_AMX    ,
SUM(D_MS_OP_TO_MS_MAX_MOP_AU)      AS SUM_D_MS_OP_TO_MS_MAX_MOP_AU     ,
SUM(D_MS_OP_TO_MS_MAX_MOP_M)       AS SUM_D_MS_OP_TO_MS_MAX_MOP_M      ,
SUM(D_MS_OP_TO_MS_MAX_MOP_PL)      AS SUM_D_MS_OP_TO_MS_MAX_MOP_PL     ,
SUM(D_MS_OP_TO_MS_MAX_MOP_R)       AS SUM_D_MS_OP_TO_MS_MAX_MOP_R      ,
SUM(D_MS_OP_TO_MS_MAX_MOP)         AS SUM_D_MS_OP_TO_MS_MAX_MOP        ,
SUM(D_MS_OP_TO_MS_MAX_MOP_TU     ) AS SUM_D_MS_OP_TO_MS_MAX_MOP_TU     ,
SUM(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) AS SUM_D_MS_OP_TO_MS_MAX_MOP_TU_ALL ,
SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) AS SUM_D_MS_OP_TO_MS_MAX_MOP_NBK_TU ,

-- MIN
MIN(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   AS MIN_D_MS_OP_TO_MS_MAX_MOP_BK_AU,
MIN(D_MS_OP_TO_MS_MAX_MOP_BK_M)    AS MIN_D_MS_OP_TO_MS_MAX_MOP_BK_M,
MIN(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   AS MIN_D_MS_OP_TO_MS_MAX_MOP_BK_PL,
MIN(D_MS_OP_TO_MS_MAX_MOP_BK_R)    AS MIN_D_MS_OP_TO_MS_MAX_MOP_BK_R,
MIN(D_MS_OP_TO_MS_MAX_MOP_BK)      AS MIN_D_MS_OP_TO_MS_MAX_MOP_BK,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  AS MIN_D_MS_OP_TO_MS_MAX_MOP_NBK_AU,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   AS MIN_D_MS_OP_TO_MS_MAX_MOP_NBK_M,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  AS MIN_D_MS_OP_TO_MS_MAX_MOP_NBK_PL,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   AS MIN_D_MS_OP_TO_MS_MAX_MOP_NBK_R,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK)     AS MIN_D_MS_OP_TO_MS_MAX_MOP_NBK,
MIN(D_MS_OP_TO_MS_MAX_MOP_AMX)     AS MIN_D_MS_OP_TO_MS_MAX_MOP_AMX,
MIN(D_MS_OP_TO_MS_MAX_MOP_AU)      AS MIN_D_MS_OP_TO_MS_MAX_MOP_AU,
MIN(D_MS_OP_TO_MS_MAX_MOP_M)       AS MIN_D_MS_OP_TO_MS_MAX_MOP_M,
MIN(D_MS_OP_TO_MS_MAX_MOP_PL)      AS MIN_D_MS_OP_TO_MS_MAX_MOP_PL,
MIN(D_MS_OP_TO_MS_MAX_MOP_R)       AS MIN_D_MS_OP_TO_MS_MAX_MOP_R,
MIN(D_MS_OP_TO_MS_MAX_MOP)         AS MIN_D_MS_OP_TO_MS_MAX_MOP,
MIN(D_MS_OP_TO_MS_MAX_MOP_TU     ) AS MIN_D_MS_OP_TO_MS_MAX_MOP_TU      ,
MIN(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) AS MIN_D_MS_OP_TO_MS_MAX_MOP_TU_ALL  ,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) AS MIN_D_MS_OP_TO_MS_MAX_MOP_NBK_TU  ,

-- DIF
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   - MIN(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   AS DIF_D_MS_OP_TO_MS_MAX_MOP_BK_AU  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_M)    - MIN(D_MS_OP_TO_MS_MAX_MOP_BK_M)    AS DIF_D_MS_OP_TO_MS_MAX_MOP_BK_M   ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   - MIN(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   AS DIF_D_MS_OP_TO_MS_MAX_MOP_BK_PL  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK_R)    - MIN(D_MS_OP_TO_MS_MAX_MOP_BK_R)    AS DIF_D_MS_OP_TO_MS_MAX_MOP_BK_R   ,
MAX(D_MS_OP_TO_MS_MAX_MOP_BK)      - MIN(D_MS_OP_TO_MS_MAX_MOP_BK)      AS DIF_D_MS_OP_TO_MS_MAX_MOP_BK     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  - MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  AS DIF_D_MS_OP_TO_MS_MAX_MOP_NBK_AU ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   - MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   AS DIF_D_MS_OP_TO_MS_MAX_MOP_NBK_M  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  - MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  AS DIF_D_MS_OP_TO_MS_MAX_MOP_NBK_PL ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   - MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   AS DIF_D_MS_OP_TO_MS_MAX_MOP_NBK_R  ,
MAX(D_MS_OP_TO_MS_MAX_MOP_NBK)     - MIN(D_MS_OP_TO_MS_MAX_MOP_NBK)     AS DIF_D_MS_OP_TO_MS_MAX_MOP_NBK    ,
MAX(D_MS_OP_TO_MS_MAX_MOP_AMX)     - MIN(D_MS_OP_TO_MS_MAX_MOP_AMX)     AS DIF_D_MS_OP_TO_MS_MAX_MOP_AMX    ,
MAX(D_MS_OP_TO_MS_MAX_MOP_AU)      - MIN(D_MS_OP_TO_MS_MAX_MOP_AU)      AS DIF_D_MS_OP_TO_MS_MAX_MOP_AU     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_M)       - MIN(D_MS_OP_TO_MS_MAX_MOP_M)       AS DIF_D_MS_OP_TO_MS_MAX_MOP_M      ,
MAX(D_MS_OP_TO_MS_MAX_MOP_PL)      - MIN(D_MS_OP_TO_MS_MAX_MOP_PL)      AS DIF_D_MS_OP_TO_MS_MAX_MOP_PL     ,
MAX(D_MS_OP_TO_MS_MAX_MOP_R)       - MIN(D_MS_OP_TO_MS_MAX_MOP_R)       AS DIF_D_MS_OP_TO_MS_MAX_MOP_R      ,
MAX(D_MS_OP_TO_MS_MAX_MOP)         - MIN(D_MS_OP_TO_MS_MAX_MOP)         AS DIF_D_MS_OP_TO_MS_MAX_MOP        ,
MIN(D_MS_OP_TO_MS_MAX_MOP_TU     ) - MIN(D_MS_OP_TO_MS_MAX_MOP_TU     ) AS DIF_D_MS_OP_TO_MS_MAX_MOP_TU     ,
MIN(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) - MIN(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) AS DIF_D_MS_OP_TO_MS_MAX_MOP_TU_ALL ,
MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) - MIN(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) AS DIF_D_MS_OP_TO_MS_MAX_MOP_NBK_TU ,

-- AVG                                    
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_BK_AU)   / COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_AU) ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_BK_AU  ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_BK_M)    / COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_M)  ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_BK_M   ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_BK_PL)   / COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_PL) ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_BK_PL  ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_BK_R)    / COUNT(D_MS_OP_TO_MS_MAX_MOP_BK_R)  ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_BK_R   ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_BK)      / COUNT(D_MS_OP_TO_MS_MAX_MOP_BK)    ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_BK     ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_AU)  / COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_AU),2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_NBK_AU ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_M)   / COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_M) ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_NBK_M  ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_PL)  / COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_PL),2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_NBK_PL ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_R)   / COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_R) ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_NBK_R  ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_NBK)     / COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK)   ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_NBK    ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_AMX)     / COUNT(D_MS_OP_TO_MS_MAX_MOP_AMX)   ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_AMX    ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_AU)      / COUNT(D_MS_OP_TO_MS_MAX_MOP_AU)    ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_AU     ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_M)       / COUNT(D_MS_OP_TO_MS_MAX_MOP_M)     ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_M      ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_PL)      / COUNT(D_MS_OP_TO_MS_MAX_MOP_PL)    ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_PL     ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_R)       / COUNT(D_MS_OP_TO_MS_MAX_MOP_R)     ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP_R      ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP)         / COUNT(D_MS_OP_TO_MS_MAX_MOP)       ,2)    AS AVG_D_MS_OP_TO_MS_MAX_MOP        ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_TU     ) / COUNT(D_MS_OP_TO_MS_MAX_MOP_TU     ) , 2) AS AVG_D_MS_OP_TO_MS_MAX_MOP_TU     ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) / COUNT(D_MS_OP_TO_MS_MAX_MOP_TU_ALL ) , 2) AS AVG_D_MS_OP_TO_MS_MAX_MOP_TU_ALL ,
ROUND( SUM(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) / COUNT(D_MS_OP_TO_MS_MAX_MOP_NBK_TU ) , 2) AS AVG_D_MS_OP_TO_MS_MAX_MOP_NBK_TU 

FROM dbmymwork.BTDC_LGG_VAR_SEGMENTADAS_1
GROUP BY CUENTADEREFERENCIA,
FECHA_CARTERA
;

SELECT * FROM dbmymwork.BTDC_LGG_VAR_D_MS_OP_TO_MS_MAX_MOP LIMIT 100;