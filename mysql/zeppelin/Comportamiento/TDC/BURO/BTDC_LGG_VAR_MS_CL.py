%hive

DROP TABLE IF EXISTS dbmymwork.BTDC_LGG_VAR_MS_CL;
CREATE TABLE dbmymwork.BTDC_LGG_VAR_MS_CL
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'

LOCATION 's3://boi-banregio/datalake/data/InteligenciaRiesgos/M&M/BTDC/VARIABLES/BTDC_LGG_VAR_MS_CL' AS

SELECT
CUENTADEREFERENCIA,
FECHA_CARTERA,

COUNT(MS_CL_AMX_CL_ACC)    AS NUM_MS_CL_AMX_CL_ACC    ,
COUNT(MS_CL_AU_CL_ACC)     AS NUM_MS_CL_AU_CL_ACC     ,
COUNT(MS_CL_BK_AU_CL_ACC)  AS NUM_MS_CL_BK_AU_CL_ACC  ,
COUNT(MS_CL_BK_CL_ACC)     AS NUM_MS_CL_BK_CL_ACC     ,
COUNT(MS_CL_BK_M_CL_ACC)   AS NUM_MS_CL_BK_M_CL_ACC   ,
COUNT(MS_CL_BK_PL_CL_ACC)  AS NUM_MS_CL_BK_PL_CL_ACC  ,
COUNT(MS_CL_BK_R_CL_ACC)   AS NUM_MS_CL_BK_R_CL_ACC   ,
COUNT(MS_CL_CL_ACC)        AS NUM_MS_CL_CL_ACC        ,
COUNT(MS_CL_M_CL_ACC)      AS NUM_MS_CL_M_CL_ACC      ,
COUNT(MS_CL_NBK_AU_CL_ACC) AS NUM_MS_CL_NBK_AU_CL_ACC ,
COUNT(MS_CL_NBK_CL_ACC)    AS NUM_MS_CL_NBK_CL_ACC    ,
COUNT(MS_CL_NBK_M_CL_ACC)  AS NUM_MS_CL_NBK_M_CL_ACC  ,
COUNT(MS_CL_NBK_PL_CL_ACC) AS NUM_MS_CL_NBK_PL_CL_ACC ,
COUNT(MS_CL_NBK_R_CL_ACC)  AS NUM_MS_CL_NBK_R_CL_ACC  ,
COUNT(MS_CL_PL_CL_ACC)     AS NUM_MS_CL_PL_CL_ACC     ,
COUNT(MS_CL_R_CL_ACC)      AS NUM_MS_CL_R_CL_ACC      ,
COUNT(MS_CL_TU_CL_ACC)     AS NUM_MS_CL_TU_CL_ACC     ,
COUNT(MS_CL_TU_ALL_CL_ACC) AS NUM_MS_CL_TU_ALL_CL_ACC ,
COUNT(MS_CL_NBK_TU_CL_ACC) AS NUM_MS_CL_NBK_TU_CL_ACC ,

SUM(MS_CL_AMX_CL_ACC)    AS SUM_MS_CL_AMX_CL_ACC    ,
SUM(MS_CL_AU_CL_ACC)     AS SUM_MS_CL_AU_CL_ACC     ,
SUM(MS_CL_BK_AU_CL_ACC)  AS SUM_MS_CL_BK_AU_CL_ACC  ,
SUM(MS_CL_BK_CL_ACC)     AS SUM_MS_CL_BK_CL_ACC     ,
SUM(MS_CL_BK_M_CL_ACC)   AS SUM_MS_CL_BK_M_CL_ACC   ,
SUM(MS_CL_BK_PL_CL_ACC)  AS SUM_MS_CL_BK_PL_CL_ACC  ,
SUM(MS_CL_BK_R_CL_ACC)   AS SUM_MS_CL_BK_R_CL_ACC   ,
SUM(MS_CL_CL_ACC)        AS SUM_MS_CL_CL_ACC        ,
SUM(MS_CL_M_CL_ACC)      AS SUM_MS_CL_M_CL_ACC      ,
SUM(MS_CL_NBK_AU_CL_ACC) AS SUM_MS_CL_NBK_AU_CL_ACC ,
SUM(MS_CL_NBK_CL_ACC)    AS SUM_MS_CL_NBK_CL_ACC    ,
SUM(MS_CL_NBK_M_CL_ACC)  AS SUM_MS_CL_NBK_M_CL_ACC  ,
SUM(MS_CL_NBK_PL_CL_ACC) AS SUM_MS_CL_NBK_PL_CL_ACC ,
SUM(MS_CL_NBK_R_CL_ACC)  AS SUM_MS_CL_NBK_R_CL_ACC  ,
SUM(MS_CL_PL_CL_ACC)     AS SUM_MS_CL_PL_CL_ACC     ,
SUM(MS_CL_R_CL_ACC)      AS SUM_MS_CL_R_CL_ACC      ,
SUM(MS_CL_TU_CL_ACC)     AS SUM_MS_CL_TU_CL_ACC     ,
SUM(MS_CL_TU_ALL_CL_ACC) AS SUM_MS_CL_TU_ALL_CL_ACC ,
SUM(MS_CL_NBK_TU_CL_ACC) AS SUM_MS_CL_NBK_TU_CL_ACC ,

MAX(MS_CL_AMX_CL_ACC)    AS MAX_MS_CL_AMX_CL_ACC    ,
MAX(MS_CL_AU_CL_ACC)     AS MAX_MS_CL_AU_CL_ACC     ,
MAX(MS_CL_BK_AU_CL_ACC)  AS MAX_MS_CL_BK_AU_CL_ACC  ,
MAX(MS_CL_BK_CL_ACC)     AS MAX_MS_CL_BK_CL_ACC     ,
MAX(MS_CL_BK_M_CL_ACC)   AS MAX_MS_CL_BK_M_CL_ACC   ,
MAX(MS_CL_BK_PL_CL_ACC)  AS MAX_MS_CL_BK_PL_CL_ACC  ,
MAX(MS_CL_BK_R_CL_ACC)   AS MAX_MS_CL_BK_R_CL_ACC   ,
MAX(MS_CL_CL_ACC)        AS MAX_MS_CL_CL_ACC        ,
MAX(MS_CL_M_CL_ACC)      AS MAX_MS_CL_M_CL_ACC      ,
MAX(MS_CL_NBK_AU_CL_ACC) AS MAX_MS_CL_NBK_AU_CL_ACC ,
MAX(MS_CL_NBK_CL_ACC)    AS MAX_MS_CL_NBK_CL_ACC    ,
MAX(MS_CL_NBK_M_CL_ACC)  AS MAX_MS_CL_NBK_M_CL_ACC  ,
MAX(MS_CL_NBK_PL_CL_ACC) AS MAX_MS_CL_NBK_PL_CL_ACC ,
MAX(MS_CL_NBK_R_CL_ACC)  AS MAX_MS_CL_NBK_R_CL_ACC  ,
MAX(MS_CL_PL_CL_ACC)     AS MAX_MS_CL_PL_CL_ACC     ,
MAX(MS_CL_R_CL_ACC)      AS MAX_MS_CL_R_CL_ACC      ,
MAX(MS_CL_TU_CL_ACC)     AS MAX_MS_CL_TU_CL_ACC     ,
MAX(MS_CL_TU_ALL_CL_ACC) AS MAX_MS_CL_TU_ALL_CL_ACC ,
MAX(MS_CL_NBK_TU_CL_ACC) AS MAX_MS_CL_NBK_TU_CL_ACC ,

MAX(MS_CL_AMX_CL_ACC)-     MIN(MS_CL_AMX_CL_ACC)     AS DIF_MS_CL_AMX_CL_ACC    ,
MAX(MS_CL_AU_CL_ACC)-      MIN(MS_CL_AU_CL_ACC)      AS DIF_MS_CL_AU_CL_ACC     ,
MAX(MS_CL_BK_AU_CL_ACC)-   MIN(MS_CL_BK_AU_CL_ACC)   AS DIF_MS_CL_BK_AU_CL_ACC  ,
MAX(MS_CL_BK_CL_ACC)-      MIN(MS_CL_BK_CL_ACC)      AS DIF_MS_CL_BK_CL_ACC     ,
MAX(MS_CL_BK_M_CL_ACC)-    MIN(MS_CL_BK_M_CL_ACC)    AS DIF_MS_CL_BK_M_CL_ACC   ,
MAX(MS_CL_BK_PL_CL_ACC)-   MIN(MS_CL_BK_PL_CL_ACC)   AS DIF_MS_CL_BK_PL_CL_ACC  ,
MAX(MS_CL_BK_R_CL_ACC)-    MIN(MS_CL_BK_R_CL_ACC)    AS DIF_MS_CL_BK_R_CL_ACC   ,
MAX(MS_CL_CL_ACC)-         MIN(MS_CL_CL_ACC)         AS DIF_MS_CL_CL_ACC        ,
MAX(MS_CL_M_CL_ACC)-       MIN(MS_CL_M_CL_ACC)       AS DIF_MS_CL_M_CL_ACC      ,
MAX(MS_CL_NBK_AU_CL_ACC)  -MIN(MS_CL_NBK_AU_CL_ACC)  AS DIF_MS_CL_NBK_AU_CL_ACC ,
MAX(MS_CL_NBK_CL_ACC)-     MIN(MS_CL_NBK_CL_ACC)     AS DIF_MS_CL_NBK_CL_ACC    ,
MAX(MS_CL_NBK_M_CL_ACC)-   MIN(MS_CL_NBK_M_CL_ACC)   AS DIF_MS_CL_NBK_M_CL_ACC  ,
MAX(MS_CL_NBK_PL_CL_ACC)  -MIN(MS_CL_NBK_PL_CL_ACC)  AS DIF_MS_CL_NBK_PL_CL_ACC ,
MAX(MS_CL_NBK_R_CL_ACC)-   MIN(MS_CL_NBK_R_CL_ACC)   AS DIF_MS_CL_NBK_R_CL_ACC  ,
MAX(MS_CL_PL_CL_ACC)-      MIN(MS_CL_PL_CL_ACC)      AS DIF_MS_CL_PL_CL_ACC     ,
MAX(MS_CL_R_CL_ACC)-       MIN(MS_CL_R_CL_ACC)       AS DIF_MS_CL_R_CL_ACC      ,
MAX(MS_CL_TU_CL_ACC) -     MIN(MS_CL_TU_CL_ACC)      AS DIF_MS_CL_TU_CL_ACC     ,
MAX(MS_CL_TU_ALL_CL_ACC) - MIN(MS_CL_TU_ALL_CL_ACC)  AS DIF_MS_CL_TU_ALL_CL_ACC ,
MAX(MS_CL_NBK_TU_CL_ACC) - MIN(MS_CL_NBK_TU_CL_ACC)  AS DIF_MS_CL_NBK_TU_CL_ACC ,

MIN(MS_CL_AMX_CL_ACC)    AS MIN_MS_CL_AMX_CL_ACC    ,
MIN(MS_CL_AU_CL_ACC)     AS MIN_MS_CL_AU_CL_ACC     ,
MIN(MS_CL_BK_AU_CL_ACC)  AS MIN_MS_CL_BK_AU_CL_ACC  ,
MIN(MS_CL_BK_CL_ACC)     AS MIN_MS_CL_BK_CL_ACC     ,
MIN(MS_CL_BK_M_CL_ACC)   AS MIN_MS_CL_BK_M_CL_ACC   ,
MIN(MS_CL_BK_PL_CL_ACC)  AS MIN_MS_CL_BK_PL_CL_ACC  ,
MIN(MS_CL_BK_R_CL_ACC)   AS MIN_MS_CL_BK_R_CL_ACC   ,
MIN(MS_CL_CL_ACC)        AS MIN_MS_CL_CL_ACC        ,
MIN(MS_CL_M_CL_ACC)      AS MIN_MS_CL_M_CL_ACC      ,
MIN(MS_CL_NBK_AU_CL_ACC) AS MIN_MS_CL_NBK_AU_CL_ACC ,
MIN(MS_CL_NBK_CL_ACC)    AS MIN_MS_CL_NBK_CL_ACC    ,
MIN(MS_CL_NBK_M_CL_ACC)  AS MIN_MS_CL_NBK_M_CL_ACC  ,
MIN(MS_CL_NBK_PL_CL_ACC) AS MIN_MS_CL_NBK_PL_CL_ACC ,
MIN(MS_CL_NBK_R_CL_ACC)  AS MIN_MS_CL_NBK_R_CL_ACC  ,
MIN(MS_CL_PL_CL_ACC)     AS MIN_MS_CL_PL_CL_ACC     ,
MIN(MS_CL_R_CL_ACC)      AS MIN_MS_CL_R_CL_ACC      ,
MIN(MS_CL_TU_CL_ACC)     AS MIN_MS_CL_TU_CL_ACC     ,
MIN(MS_CL_TU_ALL_CL_ACC) AS MIN_MS_CL_TU_ALL_CL_ACC ,
MIN(MS_CL_NBK_TU_CL_ACC) AS MIN_MS_CL_NBK_TU_CL_ACC ,

ROUND( SUM(MS_CL_AMX_CL_ACC)    / COUNT(MS_CL_AMX_CL_ACC)     , 2) AS AVG_MS_CL_AMX_CL_ACC    ,
ROUND( SUM(MS_CL_AU_CL_ACC)     / COUNT(MS_CL_AU_CL_ACC)      , 2) AS AVG_MS_CL_AU_CL_ACC     ,
ROUND( SUM(MS_CL_BK_AU_CL_ACC)  / COUNT(MS_CL_BK_AU_CL_ACC)   , 2) AS AVG_MS_CL_BK_AU_CL_ACC  ,
ROUND( SUM(MS_CL_BK_CL_ACC)     / COUNT(MS_CL_BK_CL_ACC)      , 2) AS AVG_MS_CL_BK_CL_ACC     ,
ROUND( SUM(MS_CL_BK_M_CL_ACC)   / COUNT(MS_CL_BK_M_CL_ACC)    , 2) AS AVG_MS_CL_BK_M_CL_ACC   ,
ROUND( SUM(MS_CL_BK_PL_CL_ACC)  / COUNT(MS_CL_BK_PL_CL_ACC)   , 2) AS AVG_MS_CL_BK_PL_CL_ACC  ,
ROUND( SUM(MS_CL_BK_R_CL_ACC)   / COUNT(MS_CL_BK_R_CL_ACC)    , 2) AS AVG_MS_CL_BK_R_CL_ACC   ,
ROUND( SUM(MS_CL_CL_ACC)        / COUNT(MS_CL_CL_ACC)         , 2) AS AVG_MS_CL_CL_ACC        ,
ROUND( SUM(MS_CL_M_CL_ACC)      / COUNT(MS_CL_M_CL_ACC)       , 2) AS AVG_MS_CL_M_CL_ACC      ,
ROUND( SUM(MS_CL_NBK_AU_CL_ACC) / COUNT(MS_CL_NBK_AU_CL_ACC)  , 2) AS AVG_MS_CL_NBK_AU_CL_ACC ,
ROUND( SUM(MS_CL_NBK_CL_ACC)    / COUNT(MS_CL_NBK_CL_ACC)     , 2) AS AVG_MS_CL_NBK_CL_ACC    ,
ROUND( SUM(MS_CL_NBK_M_CL_ACC)  / COUNT(MS_CL_NBK_M_CL_ACC)   , 2) AS AVG_MS_CL_NBK_M_CL_ACC  ,
ROUND( SUM(MS_CL_NBK_PL_CL_ACC) / COUNT(MS_CL_NBK_PL_CL_ACC)  , 2) AS AVG_MS_CL_NBK_PL_CL_ACC ,
ROUND( SUM(MS_CL_NBK_R_CL_ACC)  / COUNT(MS_CL_NBK_R_CL_ACC)   , 2) AS AVG_MS_CL_NBK_R_CL_ACC  ,
ROUND( SUM(MS_CL_PL_CL_ACC)     / COUNT(MS_CL_PL_CL_ACC)      , 2) AS AVG_MS_CL_PL_CL_ACC     ,
ROUND( SUM(MS_CL_R_CL_ACC)      / COUNT(MS_CL_R_CL_ACC)       , 2) AS AVG_MS_CL_R_CL_ACC      ,
ROUND( SUM(MS_CL_TU_CL_ACC)     / COUNT(MS_CL_TU_CL_ACC)      , 2) AS AVG_MS_CL_TU_CL_ACC     ,
ROUND( SUM(MS_CL_TU_ALL_CL_ACC) / COUNT(MS_CL_TU_ALL_CL_ACC)  , 2) AS AVG_MS_CL_TU_ALL_CL_ACC ,
ROUND( SUM(MS_CL_NBK_TU_CL_ACC) / COUNT(MS_CL_NBK_TU_CL_ACC)  , 2) AS AVG_MS_CL_NBK_TU_CL_ACC                       

FROM dbmymwork.BTDC_LGG_VAR_SEGMENTADAS_1
GROUP BY CUENTADEREFERENCIA,
FECHA_CARTERA
;

SELECT * FROM dbmymwork.BTDC_LGG_VAR_MS_CL LIMIT 100;