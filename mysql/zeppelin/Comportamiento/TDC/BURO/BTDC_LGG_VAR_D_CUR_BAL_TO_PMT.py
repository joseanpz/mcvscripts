%hive

DROP TABLE IF EXISTS dbmymwork.BTDC_LGG_VAR_D_CUR_BAL_TO_PMT;
CREATE TABLE dbmymwork.BTDC_LGG_VAR_D_CUR_BAL_TO_PMT
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'

LOCATION 's3://boi-banregio/datalake/data/InteligenciaRiesgos/M&M/BTDC/VARIABLES/BTDC_LGG_VAR_D_CUR_BAL_TO_PMT' AS

SELECT
CUENTADEREFERENCIA,
FECHA_CARTERA,

COUNT(D_CUR_BAL_TO_PMT_AMX_OP_ACC)     AS NUM_D_CUR_BAL_TO_PMT_AMX_OP_ACC   ,
COUNT(D_CUR_BAL_TO_PMT_BK_AU_OP_ACC)   AS NUM_D_CUR_BAL_TO_PMT_BK_AU_OP_ACC ,
COUNT(D_CUR_BAL_TO_PMT_BK_M_OP_ACC)    AS NUM_D_CUR_BAL_TO_PMT_BK_M_OP_ACC  ,
COUNT(D_CUR_BAL_TO_PMT_BK_PL_OP_ACC)   AS NUM_D_CUR_BAL_TO_PMT_BK_PL_OP_ACC ,
COUNT(D_CUR_BAL_TO_PMT_BK_R_OP_ACC)    AS NUM_D_CUR_BAL_TO_PMT_BK_R_OP_ACC  ,
COUNT(D_CUR_BAL_TO_PMT_BK_OP_ACC)      AS NUM_D_CUR_BAL_TO_PMT_BK_OP_ACC    ,
COUNT(D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC)  AS NUM_D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC,
COUNT(D_CUR_BAL_TO_PMT_NBK_M_OP_ACC)   AS NUM_D_CUR_BAL_TO_PMT_NBK_M_OP_ACC ,
COUNT(D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC)  AS NUM_D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC,
COUNT(D_CUR_BAL_TO_PMT_NBK_R_OP_ACC)   AS NUM_D_CUR_BAL_TO_PMT_NBK_R_OP_ACC ,
COUNT(D_CUR_BAL_TO_PMT_NBK_OP_ACC)     AS NUM_D_CUR_BAL_TO_PMT_NBK_OP_ACC   ,
COUNT(D_CUR_BAL_TO_PMT_AU_OP_ACC)      AS NUM_D_CUR_BAL_TO_PMT_AU_OP_ACC    ,
COUNT(D_CUR_BAL_TO_PMT_M_OP_ACC)       AS NUM_D_CUR_BAL_TO_PMT_M_OP_ACC     ,
COUNT(D_CUR_BAL_TO_PMT_PL_OP_ACC)      AS NUM_D_CUR_BAL_TO_PMT_PL_OP_ACC    ,
COUNT(D_CUR_BAL_TO_PMT_R_OP_ACC)       AS NUM_D_CUR_BAL_TO_PMT_R_OP_ACC     ,
COUNT(D_CUR_BAL_TO_PMT_OP_ACC)         AS NUM_D_CUR_BAL_TO_PMT_OP_ACC       ,
COUNT(D_CUR_BAL_TO_PMT_TU_OP_ACC)      AS NUM_D_CUR_BAL_TO_PMT_TU_OP_ACC    ,
COUNT(D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC)  AS NUM_D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC,
COUNT(D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC)  AS NUM_D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC,

MAX(D_CUR_BAL_TO_PMT_AMX_OP_ACC)       AS MAX_D_CUR_BAL_TO_PMT_AMX_OP_ACC   ,
MAX(D_CUR_BAL_TO_PMT_BK_AU_OP_ACC)     AS MAX_D_CUR_BAL_TO_PMT_BK_AU_OP_ACC ,
MAX(D_CUR_BAL_TO_PMT_BK_M_OP_ACC)      AS MAX_D_CUR_BAL_TO_PMT_BK_M_OP_ACC  ,
MAX(D_CUR_BAL_TO_PMT_BK_PL_OP_ACC)     AS MAX_D_CUR_BAL_TO_PMT_BK_PL_OP_ACC ,
MAX(D_CUR_BAL_TO_PMT_BK_R_OP_ACC)      AS MAX_D_CUR_BAL_TO_PMT_BK_R_OP_ACC  ,
MAX(D_CUR_BAL_TO_PMT_BK_OP_ACC)        AS MAX_D_CUR_BAL_TO_PMT_BK_OP_ACC    ,
MAX(D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC)    AS MAX_D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC,
MAX(D_CUR_BAL_TO_PMT_NBK_M_OP_ACC)     AS MAX_D_CUR_BAL_TO_PMT_NBK_M_OP_ACC ,
MAX(D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC)    AS MAX_D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC,
MAX(D_CUR_BAL_TO_PMT_NBK_R_OP_ACC)     AS MAX_D_CUR_BAL_TO_PMT_NBK_R_OP_ACC ,
MAX(D_CUR_BAL_TO_PMT_NBK_OP_ACC)       AS MAX_D_CUR_BAL_TO_PMT_NBK_OP_ACC   ,
MAX(D_CUR_BAL_TO_PMT_AU_OP_ACC)        AS MAX_D_CUR_BAL_TO_PMT_AU_OP_ACC    ,
MAX(D_CUR_BAL_TO_PMT_M_OP_ACC)         AS MAX_D_CUR_BAL_TO_PMT_M_OP_ACC     ,
MAX(D_CUR_BAL_TO_PMT_PL_OP_ACC)        AS MAX_D_CUR_BAL_TO_PMT_PL_OP_ACC    ,
MAX(D_CUR_BAL_TO_PMT_R_OP_ACC)         AS MAX_D_CUR_BAL_TO_PMT_R_OP_ACC     ,
MAX(D_CUR_BAL_TO_PMT_OP_ACC)           AS MAX_D_CUR_BAL_TO_PMT_OP_ACC       ,
MAX(D_CUR_BAL_TO_PMT_TU_OP_ACC)        AS MAX_D_CUR_BAL_TO_PMT_TU_OP_ACC    ,
MAX(D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC)    AS MAX_D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC,
MAX(D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC)    AS MAX_D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC,

SUM(D_CUR_BAL_TO_PMT_AMX_OP_ACC)       AS SUM_D_CUR_BAL_TO_PMT_AMX_OP_ACC   ,
SUM(D_CUR_BAL_TO_PMT_BK_AU_OP_ACC)     AS SUM_D_CUR_BAL_TO_PMT_BK_AU_OP_ACC ,
SUM(D_CUR_BAL_TO_PMT_BK_M_OP_ACC)      AS SUM_D_CUR_BAL_TO_PMT_BK_M_OP_ACC  ,
SUM(D_CUR_BAL_TO_PMT_BK_PL_OP_ACC)     AS SUM_D_CUR_BAL_TO_PMT_BK_PL_OP_ACC ,
SUM(D_CUR_BAL_TO_PMT_BK_R_OP_ACC)      AS SUM_D_CUR_BAL_TO_PMT_BK_R_OP_ACC  ,
SUM(D_CUR_BAL_TO_PMT_BK_OP_ACC)        AS SUM_D_CUR_BAL_TO_PMT_BK_OP_ACC    ,
SUM(D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC)    AS SUM_D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC,
SUM(D_CUR_BAL_TO_PMT_NBK_M_OP_ACC)     AS SUM_D_CUR_BAL_TO_PMT_NBK_M_OP_ACC ,
SUM(D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC)    AS SUM_D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC,
SUM(D_CUR_BAL_TO_PMT_NBK_R_OP_ACC)     AS SUM_D_CUR_BAL_TO_PMT_NBK_R_OP_ACC ,
SUM(D_CUR_BAL_TO_PMT_NBK_OP_ACC)       AS SUM_D_CUR_BAL_TO_PMT_NBK_OP_ACC   ,
SUM(D_CUR_BAL_TO_PMT_AU_OP_ACC)        AS SUM_D_CUR_BAL_TO_PMT_AU_OP_ACC    ,
SUM(D_CUR_BAL_TO_PMT_M_OP_ACC)         AS SUM_D_CUR_BAL_TO_PMT_M_OP_ACC     ,
SUM(D_CUR_BAL_TO_PMT_PL_OP_ACC)        AS SUM_D_CUR_BAL_TO_PMT_PL_OP_ACC    ,
SUM(D_CUR_BAL_TO_PMT_R_OP_ACC)         AS SUM_D_CUR_BAL_TO_PMT_R_OP_ACC     ,
SUM(D_CUR_BAL_TO_PMT_OP_ACC)           AS SUM_D_CUR_BAL_TO_PMT_OP_ACC       ,
SUM(D_CUR_BAL_TO_PMT_TU_OP_ACC)        AS SUM_D_CUR_BAL_TO_PMT_TU_OP_ACC    ,
SUM(D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC)    AS SUM_D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC,
SUM(D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC)    AS SUM_D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC,

ROUND( SUM(D_CUR_BAL_TO_PMT_AMX_OP_ACC)    / COUNT(D_CUR_BAL_TO_PMT_AMX_OP_ACC)     ,2)  AS AVG_D_CUR_BAL_TO_PMT_AMX_OP_ACC   ,
ROUND( SUM(D_CUR_BAL_TO_PMT_BK_AU_OP_ACC)  / COUNT(D_CUR_BAL_TO_PMT_BK_AU_OP_ACC)   ,2)  AS AVG_D_CUR_BAL_TO_PMT_BK_AU_OP_ACC ,
ROUND( SUM(D_CUR_BAL_TO_PMT_BK_M_OP_ACC)   / COUNT(D_CUR_BAL_TO_PMT_BK_M_OP_ACC)    ,2)  AS AVG_D_CUR_BAL_TO_PMT_BK_M_OP_ACC  ,
ROUND( SUM(D_CUR_BAL_TO_PMT_BK_PL_OP_ACC)  / COUNT(D_CUR_BAL_TO_PMT_BK_PL_OP_ACC)   ,2)  AS AVG_D_CUR_BAL_TO_PMT_BK_PL_OP_ACC ,
ROUND( SUM(D_CUR_BAL_TO_PMT_BK_R_OP_ACC)   / COUNT(D_CUR_BAL_TO_PMT_BK_R_OP_ACC)    ,2)  AS AVG_D_CUR_BAL_TO_PMT_BK_R_OP_ACC  ,
ROUND( SUM(D_CUR_BAL_TO_PMT_BK_OP_ACC)     / COUNT(D_CUR_BAL_TO_PMT_BK_OP_ACC)      ,2)  AS AVG_D_CUR_BAL_TO_PMT_BK_OP_ACC    ,
ROUND( SUM(D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC) / COUNT(D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC)  ,2)  AS AVG_D_CUR_BAL_TO_PMT_NBK_AU_OP_ACC,
ROUND( SUM(D_CUR_BAL_TO_PMT_NBK_M_OP_ACC)  / COUNT(D_CUR_BAL_TO_PMT_NBK_M_OP_ACC)   ,2)  AS AVG_D_CUR_BAL_TO_PMT_NBK_M_OP_ACC ,
ROUND( SUM(D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC) / COUNT(D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC)  ,2)  AS AVG_D_CUR_BAL_TO_PMT_NBK_PL_OP_ACC,
ROUND( SUM(D_CUR_BAL_TO_PMT_NBK_R_OP_ACC)  / COUNT(D_CUR_BAL_TO_PMT_NBK_R_OP_ACC)   ,2)  AS AVG_D_CUR_BAL_TO_PMT_NBK_R_OP_ACC ,
ROUND( SUM(D_CUR_BAL_TO_PMT_NBK_OP_ACC)    / COUNT(D_CUR_BAL_TO_PMT_NBK_OP_ACC)     ,2)  AS AVG_D_CUR_BAL_TO_PMT_NBK_OP_ACC   ,
ROUND( SUM(D_CUR_BAL_TO_PMT_AU_OP_ACC)     / COUNT(D_CUR_BAL_TO_PMT_AU_OP_ACC)      ,2)  AS AVG_D_CUR_BAL_TO_PMT_AU_OP_ACC    ,
ROUND( SUM(D_CUR_BAL_TO_PMT_M_OP_ACC)      / COUNT(D_CUR_BAL_TO_PMT_M_OP_ACC)       ,2)  AS AVG_D_CUR_BAL_TO_PMT_M_OP_ACC     ,
ROUND( SUM(D_CUR_BAL_TO_PMT_PL_OP_ACC)     / COUNT(D_CUR_BAL_TO_PMT_PL_OP_ACC)      ,2)  AS AVG_D_CUR_BAL_TO_PMT_PL_OP_ACC    ,
ROUND( SUM(D_CUR_BAL_TO_PMT_R_OP_ACC)      / COUNT(D_CUR_BAL_TO_PMT_R_OP_ACC)       ,2)  AS AVG_D_CUR_BAL_TO_PMT_R_OP_ACC     ,
ROUND( SUM(D_CUR_BAL_TO_PMT_OP_ACC)        / COUNT(D_CUR_BAL_TO_PMT_OP_ACC)         ,2)  AS AVG_D_CUR_BAL_TO_PMT_OP_ACC       ,
ROUND( SUM(D_CUR_BAL_TO_PMT_TU_OP_ACC)     / COUNT(D_CUR_BAL_TO_PMT_TU_OP_ACC)      ,2)  AS AVG_D_CUR_BAL_TO_PMT_TU_OP_ACC    ,
ROUND( SUM(D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC) / COUNT(D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC)  ,2)  AS AVG_D_CUR_BAL_TO_PMT_TU_ALL_OP_ACC,
ROUND( SUM(D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC) / COUNT(D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC)  ,2)  AS AVG_D_CUR_BAL_TO_PMT_NBK_TU_OP_ACC

FROM dbmymwork.BTDC_LGG_VAR_SEGMENTADAS_1
GROUP BY CUENTADEREFERENCIA,
FECHA_CARTERA
;

SELECT * FROM dbmymwork.BTDC_LGG_VAR_D_CUR_BAL_TO_PMT LIMIT 100;