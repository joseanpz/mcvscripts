%hive
DROP TABLE IF EXISTS dbmymwork.BTDC_LGG_VAR_R_PMT_BY_CUR_BAL;
CREATE TABLE dbmymwork.BTDC_LGG_VAR_R_PMT_BY_CUR_BAL
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'

LOCATION 's3://boi-banregio/datalake/data/InteligenciaRiesgos/M&M/BTDC/VARIABLES/BTDC_LGG_VAR_R_PMT_BY_CUR_BAL' AS
SELECT CUENTADEREFERENCIA,FECHA_CARTERA,

COUNT(R_PMT_BY_CUR_BAL_AMX_OP_ACC)    AS NUM_R_PMT_BY_CUR_BAL_AMX_OP_ACC   ,
COUNT(R_PMT_BY_CUR_BAL_AU_OP_ACC)     AS NUM_R_PMT_BY_CUR_BAL_AU_OP_ACC    ,
COUNT(R_PMT_BY_CUR_BAL_BK_AU_OP_ACC)  AS NUM_R_PMT_BY_CUR_BAL_BK_AU_OP_ACC ,
COUNT(R_PMT_BY_CUR_BAL_BK_M_OP_ACC)   AS NUM_R_PMT_BY_CUR_BAL_BK_M_OP_ACC  ,
COUNT(R_PMT_BY_CUR_BAL_BK_OP_ACC)     AS NUM_R_PMT_BY_CUR_BAL_BK_OP_ACC    ,
COUNT(R_PMT_BY_CUR_BAL_BK_PL_OP_ACC)  AS NUM_R_PMT_BY_CUR_BAL_BK_PL_OP_ACC ,
COUNT(R_PMT_BY_CUR_BAL_BK_R_OP_ACC)   AS NUM_R_PMT_BY_CUR_BAL_BK_R_OP_ACC  ,
COUNT(R_PMT_BY_CUR_BAL_M_OP_ACC)      AS NUM_R_PMT_BY_CUR_BAL_M_OP_ACC     ,
COUNT(R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC) AS NUM_R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC,
COUNT(R_PMT_BY_CUR_BAL_NBK_M_OP_ACC)  AS NUM_R_PMT_BY_CUR_BAL_NBK_M_OP_ACC ,
COUNT(R_PMT_BY_CUR_BAL_NBK_OP_ACC)    AS NUM_R_PMT_BY_CUR_BAL_NBK_OP_ACC   ,
COUNT(R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC) AS NUM_R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC,
COUNT(R_PMT_BY_CUR_BAL_NBK_R_OP_ACC)  AS NUM_R_PMT_BY_CUR_BAL_NBK_R_OP_ACC ,
COUNT(R_PMT_BY_CUR_BAL_OP_ACC)        AS NUM_R_PMT_BY_CUR_BAL_OP_ACC       ,
COUNT(R_PMT_BY_CUR_BAL_PL_OP_ACC)     AS NUM_R_PMT_BY_CUR_BAL_PL_OP_ACC    ,
COUNT(R_PMT_BY_CUR_BAL_R_OP_ACC)      AS NUM_R_PMT_BY_CUR_BAL_R_OP_ACC     ,
COUNT(R_PMT_BY_CUR_BAL_TU_OP_ACC    ) AS NUM_R_PMT_BY_CUR_BAL_TU_OP_ACC    ,
COUNT(R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC) AS NUM_R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC,
COUNT(R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC) AS NUM_R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC,

ROUND(SUM(R_PMT_BY_CUR_BAL_AMX_OP_ACC)    , 4) AS SUM_R_PMT_BY_CUR_BAL_AMX_OP_ACC   ,
ROUND(SUM(R_PMT_BY_CUR_BAL_AU_OP_ACC)     , 4) AS SUM_R_PMT_BY_CUR_BAL_AU_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_AU_OP_ACC)  , 4) AS SUM_R_PMT_BY_CUR_BAL_BK_AU_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_M_OP_ACC)   , 4) AS SUM_R_PMT_BY_CUR_BAL_BK_M_OP_ACC  ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_OP_ACC)     , 4) AS SUM_R_PMT_BY_CUR_BAL_BK_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_PL_OP_ACC)  , 4) AS SUM_R_PMT_BY_CUR_BAL_BK_PL_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_R_OP_ACC)   , 4) AS SUM_R_PMT_BY_CUR_BAL_BK_R_OP_ACC  ,
ROUND(SUM(R_PMT_BY_CUR_BAL_M_OP_ACC)      , 4) AS SUM_R_PMT_BY_CUR_BAL_M_OP_ACC     ,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC) , 4) AS SUM_R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_M_OP_ACC)  , 4) AS SUM_R_PMT_BY_CUR_BAL_NBK_M_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_OP_ACC)    , 4) AS SUM_R_PMT_BY_CUR_BAL_NBK_OP_ACC   ,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC) , 4) AS SUM_R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_R_OP_ACC)  , 4) AS SUM_R_PMT_BY_CUR_BAL_NBK_R_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_OP_ACC)        , 4) AS SUM_R_PMT_BY_CUR_BAL_OP_ACC       ,
ROUND(SUM(R_PMT_BY_CUR_BAL_PL_OP_ACC)     , 4) AS SUM_R_PMT_BY_CUR_BAL_PL_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_R_OP_ACC)      , 4) AS SUM_R_PMT_BY_CUR_BAL_R_OP_ACC     ,
ROUND(SUM(R_PMT_BY_CUR_BAL_TU_OP_ACC    ) , 4) AS SUM_R_PMT_BY_CUR_BAL_TU_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC) , 4) AS SUM_R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC) , 4) AS SUM_R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC,

ROUND(MAX(R_PMT_BY_CUR_BAL_AMX_OP_ACC)   , 4) AS MAX_R_PMT_BY_CUR_BAL_AMX_OP_ACC   ,
ROUND(MAX(R_PMT_BY_CUR_BAL_AU_OP_ACC)    , 4) AS MAX_R_PMT_BY_CUR_BAL_AU_OP_ACC    ,
ROUND(MAX(R_PMT_BY_CUR_BAL_BK_AU_OP_ACC) , 4) AS MAX_R_PMT_BY_CUR_BAL_BK_AU_OP_ACC , 
ROUND(MAX(R_PMT_BY_CUR_BAL_BK_M_OP_ACC)  , 4) AS MAX_R_PMT_BY_CUR_BAL_BK_M_OP_ACC  ,
ROUND(MAX(R_PMT_BY_CUR_BAL_BK_OP_ACC)    , 4) AS MAX_R_PMT_BY_CUR_BAL_BK_OP_ACC    ,
ROUND(MAX(R_PMT_BY_CUR_BAL_BK_PL_OP_ACC) , 4) AS MAX_R_PMT_BY_CUR_BAL_BK_PL_OP_ACC ,
ROUND(MAX(R_PMT_BY_CUR_BAL_BK_R_OP_ACC)  , 4) AS MAX_R_PMT_BY_CUR_BAL_BK_R_OP_ACC  ,
ROUND(MAX(R_PMT_BY_CUR_BAL_M_OP_ACC)     , 4) AS MAX_R_PMT_BY_CUR_BAL_M_OP_ACC     ,
ROUND(MAX(R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC), 4) AS MAX_R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC,
ROUND(MAX(R_PMT_BY_CUR_BAL_NBK_M_OP_ACC) , 4) AS MAX_R_PMT_BY_CUR_BAL_NBK_M_OP_ACC ,
ROUND(MAX(R_PMT_BY_CUR_BAL_NBK_OP_ACC)   , 4) AS MAX_R_PMT_BY_CUR_BAL_NBK_OP_ACC   ,
ROUND(MAX(R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC), 4) AS MAX_R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC,
ROUND(MAX(R_PMT_BY_CUR_BAL_NBK_R_OP_ACC) , 4) AS MAX_R_PMT_BY_CUR_BAL_NBK_R_OP_ACC ,
ROUND(MAX(R_PMT_BY_CUR_BAL_OP_ACC)       , 4) AS MAX_R_PMT_BY_CUR_BAL_OP_ACC       ,
ROUND(MAX(R_PMT_BY_CUR_BAL_PL_OP_ACC)    , 4) AS MAX_R_PMT_BY_CUR_BAL_PL_OP_ACC    ,
ROUND(MAX(R_PMT_BY_CUR_BAL_R_OP_ACC)     , 4) AS MAX_R_PMT_BY_CUR_BAL_R_OP_ACC     ,
ROUND(MAX(R_PMT_BY_CUR_BAL_TU_OP_ACC    ), 4) AS MAX_R_PMT_BY_CUR_BAL_TU_OP_ACC    ,
ROUND(MAX(R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC), 4) AS MAX_R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC,
ROUND(MAX(R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC), 4) AS MAX_R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC,

ROUND(SUM(R_PMT_BY_CUR_BAL_AMX_OP_ACC)    / COUNT(R_PMT_BY_CUR_BAL_AMX_OP_ACC)     ,4) AS AVG_R_PMT_BY_CUR_BAL_AMX_OP_ACC   ,
ROUND(SUM(R_PMT_BY_CUR_BAL_AU_OP_ACC)     / COUNT(R_PMT_BY_CUR_BAL_AU_OP_ACC)      ,4) AS AVG_R_PMT_BY_CUR_BAL_AU_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_AU_OP_ACC)  / COUNT(R_PMT_BY_CUR_BAL_BK_AU_OP_ACC)   ,4) AS AVG_R_PMT_BY_CUR_BAL_BK_AU_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_M_OP_ACC)   / COUNT(R_PMT_BY_CUR_BAL_BK_M_OP_ACC)    ,4) AS AVG_R_PMT_BY_CUR_BAL_BK_M_OP_ACC  ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_OP_ACC)     / COUNT(R_PMT_BY_CUR_BAL_BK_OP_ACC)      ,4) AS AVG_R_PMT_BY_CUR_BAL_BK_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_PL_OP_ACC)  / COUNT(R_PMT_BY_CUR_BAL_BK_PL_OP_ACC)   ,4) AS AVG_R_PMT_BY_CUR_BAL_BK_PL_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_BK_R_OP_ACC)   / COUNT(R_PMT_BY_CUR_BAL_BK_R_OP_ACC)    ,4) AS AVG_R_PMT_BY_CUR_BAL_BK_R_OP_ACC  ,
ROUND(SUM(R_PMT_BY_CUR_BAL_M_OP_ACC)      / COUNT(R_PMT_BY_CUR_BAL_M_OP_ACC)       ,4) AS AVG_R_PMT_BY_CUR_BAL_M_OP_ACC     ,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC) / COUNT(R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC)  ,4) AS AVG_R_PMT_BY_CUR_BAL_NBK_AU_OP_ACC,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_M_OP_ACC)  / COUNT(R_PMT_BY_CUR_BAL_NBK_M_OP_ACC)   ,4) AS AVG_R_PMT_BY_CUR_BAL_NBK_M_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_OP_ACC)    / COUNT(R_PMT_BY_CUR_BAL_NBK_OP_ACC)     ,4) AS AVG_R_PMT_BY_CUR_BAL_NBK_OP_ACC   ,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC) / COUNT(R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC)  ,4) AS AVG_R_PMT_BY_CUR_BAL_NBK_PL_OP_ACC,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_R_OP_ACC)  / COUNT(R_PMT_BY_CUR_BAL_NBK_R_OP_ACC)   ,4) AS AVG_R_PMT_BY_CUR_BAL_NBK_R_OP_ACC ,
ROUND(SUM(R_PMT_BY_CUR_BAL_OP_ACC)        / COUNT(R_PMT_BY_CUR_BAL_OP_ACC)         ,4) AS AVG_R_PMT_BY_CUR_BAL_OP_ACC       ,
ROUND(SUM(R_PMT_BY_CUR_BAL_PL_OP_ACC)     / COUNT(R_PMT_BY_CUR_BAL_PL_OP_ACC)      ,4) AS AVG_R_PMT_BY_CUR_BAL_PL_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_R_OP_ACC)      / COUNT(R_PMT_BY_CUR_BAL_R_OP_ACC)       ,4) AS AVG_R_PMT_BY_CUR_BAL_R_OP_ACC     ,
ROUND(SUM(R_PMT_BY_CUR_BAL_TU_OP_ACC    ) / COUNT(R_PMT_BY_CUR_BAL_TU_OP_ACC    )  ,4) AS AVG_R_PMT_BY_CUR_BAL_TU_OP_ACC    ,
ROUND(SUM(R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC) / COUNT(R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC)  ,4) AS AVG_R_PMT_BY_CUR_BAL_TU_ALL_OP_ACC,
ROUND(SUM(R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC) / COUNT(R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC)  ,4) AS AVG_R_PMT_BY_CUR_BAL_NBK_TU_OP_ACC

FROM dbmymwork.BTDC_LGG_VAR_SEGMENTADAS_1
GROUP BY CUENTADEREFERENCIA,FECHA_CARTERA ;

SELECT * FROM dbmymwork.BTDC_LGG_VAR_R_PMT_BY_CUR_BAL LIMIT 100;

